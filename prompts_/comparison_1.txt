openai imported
Using test set:
[{'q': "List all pathways associated with the gene 'EGFR' and include each pathway's description.", 'a': 'CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'EGFR\'") YIELD node AS gene MATCH (gene)-[:GeneToPathwayAssociation]->(pathway:Vocabulary) RETURN pathway.name, pathway.description LIMIT 100'}, {'q': 'List the top 5 most frequently cited vocabulary terms that are cross-referenced with other ontologies.', 'a': 'MATCH (term:Vocabulary)-[:OntologyMapping]->(:Vocabulary) RETURN term.name, term.n_citation ORDER BY term.n_citation DESC LIMIT 5'}, {'q': "What are the top 5 articles mentioning the gene 'BRCA1' by citation count?", 'a': 'CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node AS gene MATCH (article:Article)-[:ContainTerm]->(gene) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 5'}, {'q': 'What is the article with the DOI 10.3233/JAD-161250?', 'a': "MATCH (a:Article) WHERE a.doi = '10.3233/JAD-161250' RETURN a.title, a.authors, a.pubdate"}, {'q': "List all genetic variants associated with 'diabetes' and include their risk alleles.", 'a': 'CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'diabetes\'") YIELD node AS disease MATCH (variant:Vocabulary)-[:VariantToDiseaseAssociation]->(disease) RETURN variant.id, variant.name, variant.`risk allele` LIMIT 100'}, {'q': "List all journals with the ISO abbreviation 'J Clin Invest'.", 'a': "MATCH (j:Journal) WHERE j.iso_abbrevation = 'J Clin Invest' RETURN j.title, j.issn_print, j.issn_online"}, {'q': "Which articles are most frequently cited and published in journals with online ISSN '1476-4687'?", 'a': "MATCH (j:Journal {issn_online: '1476-4687'})<-[:PublishedIn]-(a:Article) RETURN a.title ORDER BY a.n_citation DESC LIMIT 5"}, {'q': "What are the most cited diseases associated with chemical exposure to 'benzene'?", 'a': 'CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'benzene\'") YIELD node AS chemical MATCH (chemical)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(disease:Vocabulary) RETURN disease.name, disease.id, disease.n_citation ORDER BY disease.n_citation DESC LIMIT 1'}, {'q': "Find all diseases that are connected to the gene with HGNC ID 'HGNC:1097' and return the disease name and its citation count.", 'a': "MATCH (gene:Vocabulary {id: 'hgnc:1097'})-[:GeneToDiseaseAssociation]->(disease:Vocabulary) RETURN disease.name, disease.n_citation LIMIT 100"}, {'q': 'How many articles were published between 2018 and 2021?', 'a': 'MATCH (a:Article) WHERE a.pubdate >= 2018 AND a.pubdate <= 2021 RETURN COUNT(a)'}]

gpt-4o
[{'role': 'user', 'content': 'Task:Generate Cypher statement to query a graph database.\nInstructions:\nUse only the provided relationship types and properties in the schema.\nDo not use any other relationship types or properties that are not provided.\nSchema:\nNode properties are the following:\nArticle {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST},Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING},Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\nRelationship properties are the following:\nContainTerm {source: STRING, normalized_name: STRING, type: STRING, prob: FLOAT},VariantToDiseaseAssociation {source: STRING, type: STRING, risk allele: STRING, from_article: STRING},VariantToGeneAssociation {source: STRING, type: STRING, risk allele: STRING},HierarchicalStructure {source: STRING, type: STRING},Cite {source: STRING},GeneToPathwayAssociation {source: STRING, type: STRING},DiseaseToPhenotypicFeatureAssociation {source: STRING, type: STRING},ChemicalAffectsGeneAssociation {source: STRING, type: STRING},ChemicalToChemicalAssociation {source: STRING, type: STRING},GeneToGoTermAssociation {source: STRING, type: STRING},ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation {source: STRING, type: STRING},ExposureEventToOutcomeAssociation {source: STRING, type: STRING},GeneToDiseaseAssociation {source: STRING, type: STRING},GeneToGeneAssociation {source: STRING, type: STRING},GeneToExpressionSiteAssociation {type: STRING, source: STRING},OntologyMapping {source: STRING, score: FLOAT}\nThe relationships are the following:\n(:Article)-[:PublishedIn]->(:Journal),(:Article)-[:ContainTerm]->(:Vocabulary),(:Article)-[:Cite]->(:Article),(:Vocabulary)-[:HierarchicalStructure]->(:Vocabulary),(:Vocabulary)-[:OntologyMapping]->(:Vocabulary),(:Vocabulary)-[:GeneToDiseaseAssociation]->(:Vocabulary),(:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToExpressionSiteAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToPathwayAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGoTermAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalToChemicalAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToDiseaseAssociation]->(:Vocabulary)\n\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\nExamples: Here are a few examples of generated Cypher statements for particular questions:\n\n\nQuestion: What is the articles with PubMed ID 23?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'23\' RETURN a.title, a.authors, a.pubdate\n\nQuestion: How many articles have citation > 50? Return their title and authors\nCypher query: MATCH (a:Article) WHERE a.n_citation > 50  RETURN a.title, a.authors\n\nQuestion: Which gene is named TP53?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: get the id of type 2 diabetes?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'type 2 diabetes\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: define breast cancer\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'breast cancer\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: What are the articles published in a specific journal?\nCypher query: MATCH (a:Article)-[:PublishedIn]-(j:Journal) WHERE j.title = \'Journal Name\' RETURN a.title\n\nQuestion: How many authors collaborated on a particular article?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'PubMed ID\' RETURN size(a.authors)\n\nQuestion: Which article is with a specific title or abstract?\nCypher query: CALL db.index.fulltext.queryNodes("article_Title", "\'Title or Abstract\'") YIELD node, score WITH node as n, score LIMIT 10 RETURN n.pubmedid, n.title, n.n_citation\n\nQuestion: What are the articles that cite a specific article?\nCypher query: MATCH (a:Article {{pubmedid: \'PubMed ID\'}})<-[:Cite]-(c:Article) RETURN c.title\n\nQuestion: Based on the curated databases, what diseases are related to a specific gene?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:HGNC_ID\'}})-[:GeneToDiseaseAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation\n\nQuestion: What are the top journals by the number of articles published?\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) RETURN j.title, count(a) AS num_articles ORDER BY num_articles DESC LIMIT 10\n\nQuestion: What are the top 10 cited articles by a particular journal\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) WHERE j.title=\'The Plant Journal\' WITH a ORDER BY a.n_citation DESC RETURN a.title LIMIT 10\n\nQuestion: How many articles were published in a specific year, e.g 2020?\nCypher query: MATCH (a:Article) WHERE a.pubdate=2020 RETURN COUNT(a)\n\nQuestion: What are the articles published after a specific year?\nCypher query: MATCH (a:Article) WHERE a.pubdate > year RETURN a.title\n\nQuestion: What is the GO term with ID 0035267?\nCypher query: MATCH (v:Vocabulary {{id: \'go:0035267\'}}) RETURN v.name\n\nQuestion: What are the aliases of the gene with HGNC id 11997?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:11997\'}}) RETURN v.synonyms\n\nQuestion: What is the disease with DOID 0050606?\nCypher query: MATCH (v:Vocabulary {{id: \'doid:0050606\'}}) RETURN v.name\n\nQuestion: What are the cross references of the MESH term D007644 in other ontologies?\nCypher query: MATCH (v:Vocabulary {{id: \'mesh:D007644\'}})-[:OntologyMapping]->(o:Vocabulary) RETURN o.name, o.id\n\nQuestion: What is the most cited article of a specific biomedical concept?\nCypher query: MATCH (v:Vocabulary {{id: \'Concept ID\'}})-[:ContainTerm]-(a:Article) RETURN a.title ORDER BY a.n_citation DESC LIMIT 1\n\nQuestion: Which genetic variant affects a specific gene?\nCypher query: MATCH (:Vocabulary {{id: \'Concept ID\'}})-[:VariantToGeneAssociation]-(v:Vocabulary) RETURN v.id, v.name\n\nQuestion: What is the reference and alternative alleles of the genetic variant with RSID rs35850753?\nCypher query: MATCH (v:Vocabulary {{id: \'rs35850753\'}}) RETURN v.ref, v.alt\n\nQuestion: What are the subclasses of the disease mondo:0018800?\nCypher query: MATCH (v:Vocabulary)-[:HierarchicalStructure]->(d:Vocabulary {{id: \'mondo:0018800\'}}) RETURN v.name, v.id\n\nQuestion: List all pathways associated with the gene \'EGFR\' and include each pathway\'s description.\nCypher Query: '}]
gpt-4o
[{'role': 'user', 'content': 'Task:Generate Cypher statement to query a graph database.\nInstructions:\nUse only the provided relationship types and properties in the schema.\nDo not use any other relationship types or properties that are not provided.\nSchema:\nNode properties are the following:\nArticle {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST},Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING},Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\nRelationship properties are the following:\nContainTerm {source: STRING, normalized_name: STRING, type: STRING, prob: FLOAT},VariantToDiseaseAssociation {source: STRING, type: STRING, risk allele: STRING, from_article: STRING},VariantToGeneAssociation {source: STRING, type: STRING, risk allele: STRING},HierarchicalStructure {source: STRING, type: STRING},Cite {source: STRING},GeneToPathwayAssociation {source: STRING, type: STRING},DiseaseToPhenotypicFeatureAssociation {source: STRING, type: STRING},ChemicalAffectsGeneAssociation {source: STRING, type: STRING},ChemicalToChemicalAssociation {source: STRING, type: STRING},GeneToGoTermAssociation {source: STRING, type: STRING},ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation {source: STRING, type: STRING},ExposureEventToOutcomeAssociation {source: STRING, type: STRING},GeneToDiseaseAssociation {source: STRING, type: STRING},GeneToGeneAssociation {source: STRING, type: STRING},GeneToExpressionSiteAssociation {type: STRING, source: STRING},OntologyMapping {source: STRING, score: FLOAT}\nThe relationships are the following:\n(:Article)-[:PublishedIn]->(:Journal),(:Article)-[:ContainTerm]->(:Vocabulary),(:Article)-[:Cite]->(:Article),(:Vocabulary)-[:HierarchicalStructure]->(:Vocabulary),(:Vocabulary)-[:OntologyMapping]->(:Vocabulary),(:Vocabulary)-[:GeneToDiseaseAssociation]->(:Vocabulary),(:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToExpressionSiteAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToPathwayAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGoTermAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalToChemicalAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToDiseaseAssociation]->(:Vocabulary)\n\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\nExamples: Here are a few examples of generated Cypher statements for particular questions:\n\n\nQuestion: What is the articles with PubMed ID 23?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'23\' RETURN a.title, a.authors, a.pubdate\n\nQuestion: How many articles have citation > 50? Return their title and authors\nCypher query: MATCH (a:Article) WHERE a.n_citation > 50  RETURN a.title, a.authors\n\nQuestion: Which gene is named TP53?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: get the id of type 2 diabetes?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'type 2 diabetes\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: define breast cancer\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'breast cancer\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: What are the articles published in a specific journal?\nCypher query: MATCH (a:Article)-[:PublishedIn]-(j:Journal) WHERE j.title = \'Journal Name\' RETURN a.title\n\nQuestion: How many authors collaborated on a particular article?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'PubMed ID\' RETURN size(a.authors)\n\nQuestion: Which article is with a specific title or abstract?\nCypher query: CALL db.index.fulltext.queryNodes("article_Title", "\'Title or Abstract\'") YIELD node, score WITH node as n, score LIMIT 10 RETURN n.pubmedid, n.title, n.n_citation\n\nQuestion: What are the articles that cite a specific article?\nCypher query: MATCH (a:Article {{pubmedid: \'PubMed ID\'}})<-[:Cite]-(c:Article) RETURN c.title\n\nQuestion: Based on the curated databases, what diseases are related to a specific gene?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:HGNC_ID\'}})-[:GeneToDiseaseAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation\n\nQuestion: What are the top journals by the number of articles published?\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) RETURN j.title, count(a) AS num_articles ORDER BY num_articles DESC LIMIT 10\n\nQuestion: What are the top 10 cited articles by a particular journal\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) WHERE j.title=\'The Plant Journal\' WITH a ORDER BY a.n_citation DESC RETURN a.title LIMIT 10\n\nQuestion: How many articles were published in a specific year, e.g 2020?\nCypher query: MATCH (a:Article) WHERE a.pubdate=2020 RETURN COUNT(a)\n\nQuestion: What are the articles published after a specific year?\nCypher query: MATCH (a:Article) WHERE a.pubdate > year RETURN a.title\n\nQuestion: What is the GO term with ID 0035267?\nCypher query: MATCH (v:Vocabulary {{id: \'go:0035267\'}}) RETURN v.name\n\nQuestion: What are the aliases of the gene with HGNC id 11997?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:11997\'}}) RETURN v.synonyms\n\nQuestion: What is the disease with DOID 0050606?\nCypher query: MATCH (v:Vocabulary {{id: \'doid:0050606\'}}) RETURN v.name\n\nQuestion: What are the cross references of the MESH term D007644 in other ontologies?\nCypher query: MATCH (v:Vocabulary {{id: \'mesh:D007644\'}})-[:OntologyMapping]->(o:Vocabulary) RETURN o.name, o.id\n\nQuestion: What is the most cited article of a specific biomedical concept?\nCypher query: MATCH (v:Vocabulary {{id: \'Concept ID\'}})-[:ContainTerm]-(a:Article) RETURN a.title ORDER BY a.n_citation DESC LIMIT 1\n\nQuestion: Which genetic variant affects a specific gene?\nCypher query: MATCH (:Vocabulary {{id: \'Concept ID\'}})-[:VariantToGeneAssociation]-(v:Vocabulary) RETURN v.id, v.name\n\nQuestion: What is the reference and alternative alleles of the genetic variant with RSID rs35850753?\nCypher query: MATCH (v:Vocabulary {{id: \'rs35850753\'}}) RETURN v.ref, v.alt\n\nQuestion: What are the subclasses of the disease mondo:0018800?\nCypher query: MATCH (v:Vocabulary)-[:HierarchicalStructure]->(d:Vocabulary {{id: \'mondo:0018800\'}}) RETURN v.name, v.id\n\nQuestion: List the top 5 most frequently cited vocabulary terms that are cross-referenced with other ontologies.\nCypher Query: '}]
gpt-4o
[{'role': 'user', 'content': 'Task:Generate Cypher statement to query a graph database.\nInstructions:\nUse only the provided relationship types and properties in the schema.\nDo not use any other relationship types or properties that are not provided.\nSchema:\nNode properties are the following:\nArticle {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST},Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING},Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\nRelationship properties are the following:\nContainTerm {source: STRING, normalized_name: STRING, type: STRING, prob: FLOAT},VariantToDiseaseAssociation {source: STRING, type: STRING, risk allele: STRING, from_article: STRING},VariantToGeneAssociation {source: STRING, type: STRING, risk allele: STRING},HierarchicalStructure {source: STRING, type: STRING},Cite {source: STRING},GeneToPathwayAssociation {source: STRING, type: STRING},DiseaseToPhenotypicFeatureAssociation {source: STRING, type: STRING},ChemicalAffectsGeneAssociation {source: STRING, type: STRING},ChemicalToChemicalAssociation {source: STRING, type: STRING},GeneToGoTermAssociation {source: STRING, type: STRING},ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation {source: STRING, type: STRING},ExposureEventToOutcomeAssociation {source: STRING, type: STRING},GeneToDiseaseAssociation {source: STRING, type: STRING},GeneToGeneAssociation {source: STRING, type: STRING},GeneToExpressionSiteAssociation {type: STRING, source: STRING},OntologyMapping {source: STRING, score: FLOAT}\nThe relationships are the following:\n(:Article)-[:PublishedIn]->(:Journal),(:Article)-[:ContainTerm]->(:Vocabulary),(:Article)-[:Cite]->(:Article),(:Vocabulary)-[:HierarchicalStructure]->(:Vocabulary),(:Vocabulary)-[:OntologyMapping]->(:Vocabulary),(:Vocabulary)-[:GeneToDiseaseAssociation]->(:Vocabulary),(:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToExpressionSiteAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToPathwayAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGoTermAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalToChemicalAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToDiseaseAssociation]->(:Vocabulary)\n\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\nExamples: Here are a few examples of generated Cypher statements for particular questions:\n\n\nQuestion: What is the articles with PubMed ID 23?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'23\' RETURN a.title, a.authors, a.pubdate\n\nQuestion: How many articles have citation > 50? Return their title and authors\nCypher query: MATCH (a:Article) WHERE a.n_citation > 50  RETURN a.title, a.authors\n\nQuestion: Which gene is named TP53?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: get the id of type 2 diabetes?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'type 2 diabetes\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: define breast cancer\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'breast cancer\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: What are the articles published in a specific journal?\nCypher query: MATCH (a:Article)-[:PublishedIn]-(j:Journal) WHERE j.title = \'Journal Name\' RETURN a.title\n\nQuestion: How many authors collaborated on a particular article?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'PubMed ID\' RETURN size(a.authors)\n\nQuestion: Which article is with a specific title or abstract?\nCypher query: CALL db.index.fulltext.queryNodes("article_Title", "\'Title or Abstract\'") YIELD node, score WITH node as n, score LIMIT 10 RETURN n.pubmedid, n.title, n.n_citation\n\nQuestion: What are the articles that cite a specific article?\nCypher query: MATCH (a:Article {{pubmedid: \'PubMed ID\'}})<-[:Cite]-(c:Article) RETURN c.title\n\nQuestion: Based on the curated databases, what diseases are related to a specific gene?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:HGNC_ID\'}})-[:GeneToDiseaseAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation\n\nQuestion: What are the top journals by the number of articles published?\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) RETURN j.title, count(a) AS num_articles ORDER BY num_articles DESC LIMIT 10\n\nQuestion: What are the top 10 cited articles by a particular journal\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) WHERE j.title=\'The Plant Journal\' WITH a ORDER BY a.n_citation DESC RETURN a.title LIMIT 10\n\nQuestion: How many articles were published in a specific year, e.g 2020?\nCypher query: MATCH (a:Article) WHERE a.pubdate=2020 RETURN COUNT(a)\n\nQuestion: What are the articles published after a specific year?\nCypher query: MATCH (a:Article) WHERE a.pubdate > year RETURN a.title\n\nQuestion: What is the GO term with ID 0035267?\nCypher query: MATCH (v:Vocabulary {{id: \'go:0035267\'}}) RETURN v.name\n\nQuestion: What are the aliases of the gene with HGNC id 11997?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:11997\'}}) RETURN v.synonyms\n\nQuestion: What is the disease with DOID 0050606?\nCypher query: MATCH (v:Vocabulary {{id: \'doid:0050606\'}}) RETURN v.name\n\nQuestion: What are the cross references of the MESH term D007644 in other ontologies?\nCypher query: MATCH (v:Vocabulary {{id: \'mesh:D007644\'}})-[:OntologyMapping]->(o:Vocabulary) RETURN o.name, o.id\n\nQuestion: What is the most cited article of a specific biomedical concept?\nCypher query: MATCH (v:Vocabulary {{id: \'Concept ID\'}})-[:ContainTerm]-(a:Article) RETURN a.title ORDER BY a.n_citation DESC LIMIT 1\n\nQuestion: Which genetic variant affects a specific gene?\nCypher query: MATCH (:Vocabulary {{id: \'Concept ID\'}})-[:VariantToGeneAssociation]-(v:Vocabulary) RETURN v.id, v.name\n\nQuestion: What is the reference and alternative alleles of the genetic variant with RSID rs35850753?\nCypher query: MATCH (v:Vocabulary {{id: \'rs35850753\'}}) RETURN v.ref, v.alt\n\nQuestion: What are the subclasses of the disease mondo:0018800?\nCypher query: MATCH (v:Vocabulary)-[:HierarchicalStructure]->(d:Vocabulary {{id: \'mondo:0018800\'}}) RETURN v.name, v.id\n\nQuestion: What are the top 5 articles mentioning the gene \'BRCA1\' by citation count?\nCypher Query: '}]
gpt-4o
[{'role': 'user', 'content': 'Task:Generate Cypher statement to query a graph database.\nInstructions:\nUse only the provided relationship types and properties in the schema.\nDo not use any other relationship types or properties that are not provided.\nSchema:\nNode properties are the following:\nArticle {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST},Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING},Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\nRelationship properties are the following:\nContainTerm {source: STRING, normalized_name: STRING, type: STRING, prob: FLOAT},VariantToDiseaseAssociation {source: STRING, type: STRING, risk allele: STRING, from_article: STRING},VariantToGeneAssociation {source: STRING, type: STRING, risk allele: STRING},HierarchicalStructure {source: STRING, type: STRING},Cite {source: STRING},GeneToPathwayAssociation {source: STRING, type: STRING},DiseaseToPhenotypicFeatureAssociation {source: STRING, type: STRING},ChemicalAffectsGeneAssociation {source: STRING, type: STRING},ChemicalToChemicalAssociation {source: STRING, type: STRING},GeneToGoTermAssociation {source: STRING, type: STRING},ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation {source: STRING, type: STRING},ExposureEventToOutcomeAssociation {source: STRING, type: STRING},GeneToDiseaseAssociation {source: STRING, type: STRING},GeneToGeneAssociation {source: STRING, type: STRING},GeneToExpressionSiteAssociation {type: STRING, source: STRING},OntologyMapping {source: STRING, score: FLOAT}\nThe relationships are the following:\n(:Article)-[:PublishedIn]->(:Journal),(:Article)-[:ContainTerm]->(:Vocabulary),(:Article)-[:Cite]->(:Article),(:Vocabulary)-[:HierarchicalStructure]->(:Vocabulary),(:Vocabulary)-[:OntologyMapping]->(:Vocabulary),(:Vocabulary)-[:GeneToDiseaseAssociation]->(:Vocabulary),(:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToExpressionSiteAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToPathwayAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGoTermAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalToChemicalAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToDiseaseAssociation]->(:Vocabulary)\n\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\nExamples: Here are a few examples of generated Cypher statements for particular questions:\n\n\nQuestion: What is the articles with PubMed ID 23?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'23\' RETURN a.title, a.authors, a.pubdate\n\nQuestion: How many articles have citation > 50? Return their title and authors\nCypher query: MATCH (a:Article) WHERE a.n_citation > 50  RETURN a.title, a.authors\n\nQuestion: Which gene is named TP53?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: get the id of type 2 diabetes?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'type 2 diabetes\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: define breast cancer\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'breast cancer\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: What are the articles published in a specific journal?\nCypher query: MATCH (a:Article)-[:PublishedIn]-(j:Journal) WHERE j.title = \'Journal Name\' RETURN a.title\n\nQuestion: How many authors collaborated on a particular article?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'PubMed ID\' RETURN size(a.authors)\n\nQuestion: Which article is with a specific title or abstract?\nCypher query: CALL db.index.fulltext.queryNodes("article_Title", "\'Title or Abstract\'") YIELD node, score WITH node as n, score LIMIT 10 RETURN n.pubmedid, n.title, n.n_citation\n\nQuestion: What are the articles that cite a specific article?\nCypher query: MATCH (a:Article {{pubmedid: \'PubMed ID\'}})<-[:Cite]-(c:Article) RETURN c.title\n\nQuestion: Based on the curated databases, what diseases are related to a specific gene?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:HGNC_ID\'}})-[:GeneToDiseaseAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation\n\nQuestion: What are the top journals by the number of articles published?\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) RETURN j.title, count(a) AS num_articles ORDER BY num_articles DESC LIMIT 10\n\nQuestion: What are the top 10 cited articles by a particular journal\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) WHERE j.title=\'The Plant Journal\' WITH a ORDER BY a.n_citation DESC RETURN a.title LIMIT 10\n\nQuestion: How many articles were published in a specific year, e.g 2020?\nCypher query: MATCH (a:Article) WHERE a.pubdate=2020 RETURN COUNT(a)\n\nQuestion: What are the articles published after a specific year?\nCypher query: MATCH (a:Article) WHERE a.pubdate > year RETURN a.title\n\nQuestion: What is the GO term with ID 0035267?\nCypher query: MATCH (v:Vocabulary {{id: \'go:0035267\'}}) RETURN v.name\n\nQuestion: What are the aliases of the gene with HGNC id 11997?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:11997\'}}) RETURN v.synonyms\n\nQuestion: What is the disease with DOID 0050606?\nCypher query: MATCH (v:Vocabulary {{id: \'doid:0050606\'}}) RETURN v.name\n\nQuestion: What are the cross references of the MESH term D007644 in other ontologies?\nCypher query: MATCH (v:Vocabulary {{id: \'mesh:D007644\'}})-[:OntologyMapping]->(o:Vocabulary) RETURN o.name, o.id\n\nQuestion: What is the most cited article of a specific biomedical concept?\nCypher query: MATCH (v:Vocabulary {{id: \'Concept ID\'}})-[:ContainTerm]-(a:Article) RETURN a.title ORDER BY a.n_citation DESC LIMIT 1\n\nQuestion: Which genetic variant affects a specific gene?\nCypher query: MATCH (:Vocabulary {{id: \'Concept ID\'}})-[:VariantToGeneAssociation]-(v:Vocabulary) RETURN v.id, v.name\n\nQuestion: What is the reference and alternative alleles of the genetic variant with RSID rs35850753?\nCypher query: MATCH (v:Vocabulary {{id: \'rs35850753\'}}) RETURN v.ref, v.alt\n\nQuestion: What are the subclasses of the disease mondo:0018800?\nCypher query: MATCH (v:Vocabulary)-[:HierarchicalStructure]->(d:Vocabulary {{id: \'mondo:0018800\'}}) RETURN v.name, v.id\n\nQuestion: What is the article with the DOI 10.3233/JAD-161250?\nCypher Query: '}]
gpt-4o
[{'role': 'user', 'content': 'Task:Generate Cypher statement to query a graph database.\nInstructions:\nUse only the provided relationship types and properties in the schema.\nDo not use any other relationship types or properties that are not provided.\nSchema:\nNode properties are the following:\nArticle {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST},Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING},Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\nRelationship properties are the following:\nContainTerm {source: STRING, normalized_name: STRING, type: STRING, prob: FLOAT},VariantToDiseaseAssociation {source: STRING, type: STRING, risk allele: STRING, from_article: STRING},VariantToGeneAssociation {source: STRING, type: STRING, risk allele: STRING},HierarchicalStructure {source: STRING, type: STRING},Cite {source: STRING},GeneToPathwayAssociation {source: STRING, type: STRING},DiseaseToPhenotypicFeatureAssociation {source: STRING, type: STRING},ChemicalAffectsGeneAssociation {source: STRING, type: STRING},ChemicalToChemicalAssociation {source: STRING, type: STRING},GeneToGoTermAssociation {source: STRING, type: STRING},ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation {source: STRING, type: STRING},ExposureEventToOutcomeAssociation {source: STRING, type: STRING},GeneToDiseaseAssociation {source: STRING, type: STRING},GeneToGeneAssociation {source: STRING, type: STRING},GeneToExpressionSiteAssociation {type: STRING, source: STRING},OntologyMapping {source: STRING, score: FLOAT}\nThe relationships are the following:\n(:Article)-[:PublishedIn]->(:Journal),(:Article)-[:ContainTerm]->(:Vocabulary),(:Article)-[:Cite]->(:Article),(:Vocabulary)-[:HierarchicalStructure]->(:Vocabulary),(:Vocabulary)-[:OntologyMapping]->(:Vocabulary),(:Vocabulary)-[:GeneToDiseaseAssociation]->(:Vocabulary),(:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToExpressionSiteAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToPathwayAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGoTermAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalToChemicalAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToDiseaseAssociation]->(:Vocabulary)\n\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\nExamples: Here are a few examples of generated Cypher statements for particular questions:\n\n\nQuestion: What is the articles with PubMed ID 23?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'23\' RETURN a.title, a.authors, a.pubdate\n\nQuestion: How many articles have citation > 50? Return their title and authors\nCypher query: MATCH (a:Article) WHERE a.n_citation > 50  RETURN a.title, a.authors\n\nQuestion: Which gene is named TP53?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: get the id of type 2 diabetes?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'type 2 diabetes\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: define breast cancer\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'breast cancer\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: What are the articles published in a specific journal?\nCypher query: MATCH (a:Article)-[:PublishedIn]-(j:Journal) WHERE j.title = \'Journal Name\' RETURN a.title\n\nQuestion: How many authors collaborated on a particular article?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'PubMed ID\' RETURN size(a.authors)\n\nQuestion: Which article is with a specific title or abstract?\nCypher query: CALL db.index.fulltext.queryNodes("article_Title", "\'Title or Abstract\'") YIELD node, score WITH node as n, score LIMIT 10 RETURN n.pubmedid, n.title, n.n_citation\n\nQuestion: What are the articles that cite a specific article?\nCypher query: MATCH (a:Article {{pubmedid: \'PubMed ID\'}})<-[:Cite]-(c:Article) RETURN c.title\n\nQuestion: Based on the curated databases, what diseases are related to a specific gene?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:HGNC_ID\'}})-[:GeneToDiseaseAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation\n\nQuestion: What are the top journals by the number of articles published?\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) RETURN j.title, count(a) AS num_articles ORDER BY num_articles DESC LIMIT 10\n\nQuestion: What are the top 10 cited articles by a particular journal\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) WHERE j.title=\'The Plant Journal\' WITH a ORDER BY a.n_citation DESC RETURN a.title LIMIT 10\n\nQuestion: How many articles were published in a specific year, e.g 2020?\nCypher query: MATCH (a:Article) WHERE a.pubdate=2020 RETURN COUNT(a)\n\nQuestion: What are the articles published after a specific year?\nCypher query: MATCH (a:Article) WHERE a.pubdate > year RETURN a.title\n\nQuestion: What is the GO term with ID 0035267?\nCypher query: MATCH (v:Vocabulary {{id: \'go:0035267\'}}) RETURN v.name\n\nQuestion: What are the aliases of the gene with HGNC id 11997?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:11997\'}}) RETURN v.synonyms\n\nQuestion: What is the disease with DOID 0050606?\nCypher query: MATCH (v:Vocabulary {{id: \'doid:0050606\'}}) RETURN v.name\n\nQuestion: What are the cross references of the MESH term D007644 in other ontologies?\nCypher query: MATCH (v:Vocabulary {{id: \'mesh:D007644\'}})-[:OntologyMapping]->(o:Vocabulary) RETURN o.name, o.id\n\nQuestion: What is the most cited article of a specific biomedical concept?\nCypher query: MATCH (v:Vocabulary {{id: \'Concept ID\'}})-[:ContainTerm]-(a:Article) RETURN a.title ORDER BY a.n_citation DESC LIMIT 1\n\nQuestion: Which genetic variant affects a specific gene?\nCypher query: MATCH (:Vocabulary {{id: \'Concept ID\'}})-[:VariantToGeneAssociation]-(v:Vocabulary) RETURN v.id, v.name\n\nQuestion: What is the reference and alternative alleles of the genetic variant with RSID rs35850753?\nCypher query: MATCH (v:Vocabulary {{id: \'rs35850753\'}}) RETURN v.ref, v.alt\n\nQuestion: What are the subclasses of the disease mondo:0018800?\nCypher query: MATCH (v:Vocabulary)-[:HierarchicalStructure]->(d:Vocabulary {{id: \'mondo:0018800\'}}) RETURN v.name, v.id\n\nQuestion: List all genetic variants associated with \'diabetes\' and include their risk alleles.\nCypher Query: '}]
gpt-4o
[{'role': 'user', 'content': 'Task:Generate Cypher statement to query a graph database.\nInstructions:\nUse only the provided relationship types and properties in the schema.\nDo not use any other relationship types or properties that are not provided.\nSchema:\nNode properties are the following:\nArticle {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST},Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING},Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\nRelationship properties are the following:\nContainTerm {source: STRING, normalized_name: STRING, type: STRING, prob: FLOAT},VariantToDiseaseAssociation {source: STRING, type: STRING, risk allele: STRING, from_article: STRING},VariantToGeneAssociation {source: STRING, type: STRING, risk allele: STRING},HierarchicalStructure {source: STRING, type: STRING},Cite {source: STRING},GeneToPathwayAssociation {source: STRING, type: STRING},DiseaseToPhenotypicFeatureAssociation {source: STRING, type: STRING},ChemicalAffectsGeneAssociation {source: STRING, type: STRING},ChemicalToChemicalAssociation {source: STRING, type: STRING},GeneToGoTermAssociation {source: STRING, type: STRING},ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation {source: STRING, type: STRING},ExposureEventToOutcomeAssociation {source: STRING, type: STRING},GeneToDiseaseAssociation {source: STRING, type: STRING},GeneToGeneAssociation {source: STRING, type: STRING},GeneToExpressionSiteAssociation {type: STRING, source: STRING},OntologyMapping {source: STRING, score: FLOAT}\nThe relationships are the following:\n(:Article)-[:PublishedIn]->(:Journal),(:Article)-[:ContainTerm]->(:Vocabulary),(:Article)-[:Cite]->(:Article),(:Vocabulary)-[:HierarchicalStructure]->(:Vocabulary),(:Vocabulary)-[:OntologyMapping]->(:Vocabulary),(:Vocabulary)-[:GeneToDiseaseAssociation]->(:Vocabulary),(:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToExpressionSiteAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToPathwayAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGoTermAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalToChemicalAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToDiseaseAssociation]->(:Vocabulary)\n\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\nExamples: Here are a few examples of generated Cypher statements for particular questions:\n\n\nQuestion: What is the articles with PubMed ID 23?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'23\' RETURN a.title, a.authors, a.pubdate\n\nQuestion: How many articles have citation > 50? Return their title and authors\nCypher query: MATCH (a:Article) WHERE a.n_citation > 50  RETURN a.title, a.authors\n\nQuestion: Which gene is named TP53?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: get the id of type 2 diabetes?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'type 2 diabetes\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: define breast cancer\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'breast cancer\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: What are the articles published in a specific journal?\nCypher query: MATCH (a:Article)-[:PublishedIn]-(j:Journal) WHERE j.title = \'Journal Name\' RETURN a.title\n\nQuestion: How many authors collaborated on a particular article?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'PubMed ID\' RETURN size(a.authors)\n\nQuestion: Which article is with a specific title or abstract?\nCypher query: CALL db.index.fulltext.queryNodes("article_Title", "\'Title or Abstract\'") YIELD node, score WITH node as n, score LIMIT 10 RETURN n.pubmedid, n.title, n.n_citation\n\nQuestion: What are the articles that cite a specific article?\nCypher query: MATCH (a:Article {{pubmedid: \'PubMed ID\'}})<-[:Cite]-(c:Article) RETURN c.title\n\nQuestion: Based on the curated databases, what diseases are related to a specific gene?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:HGNC_ID\'}})-[:GeneToDiseaseAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation\n\nQuestion: What are the top journals by the number of articles published?\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) RETURN j.title, count(a) AS num_articles ORDER BY num_articles DESC LIMIT 10\n\nQuestion: What are the top 10 cited articles by a particular journal\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) WHERE j.title=\'The Plant Journal\' WITH a ORDER BY a.n_citation DESC RETURN a.title LIMIT 10\n\nQuestion: How many articles were published in a specific year, e.g 2020?\nCypher query: MATCH (a:Article) WHERE a.pubdate=2020 RETURN COUNT(a)\n\nQuestion: What are the articles published after a specific year?\nCypher query: MATCH (a:Article) WHERE a.pubdate > year RETURN a.title\n\nQuestion: What is the GO term with ID 0035267?\nCypher query: MATCH (v:Vocabulary {{id: \'go:0035267\'}}) RETURN v.name\n\nQuestion: What are the aliases of the gene with HGNC id 11997?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:11997\'}}) RETURN v.synonyms\n\nQuestion: What is the disease with DOID 0050606?\nCypher query: MATCH (v:Vocabulary {{id: \'doid:0050606\'}}) RETURN v.name\n\nQuestion: What are the cross references of the MESH term D007644 in other ontologies?\nCypher query: MATCH (v:Vocabulary {{id: \'mesh:D007644\'}})-[:OntologyMapping]->(o:Vocabulary) RETURN o.name, o.id\n\nQuestion: What is the most cited article of a specific biomedical concept?\nCypher query: MATCH (v:Vocabulary {{id: \'Concept ID\'}})-[:ContainTerm]-(a:Article) RETURN a.title ORDER BY a.n_citation DESC LIMIT 1\n\nQuestion: Which genetic variant affects a specific gene?\nCypher query: MATCH (:Vocabulary {{id: \'Concept ID\'}})-[:VariantToGeneAssociation]-(v:Vocabulary) RETURN v.id, v.name\n\nQuestion: What is the reference and alternative alleles of the genetic variant with RSID rs35850753?\nCypher query: MATCH (v:Vocabulary {{id: \'rs35850753\'}}) RETURN v.ref, v.alt\n\nQuestion: What are the subclasses of the disease mondo:0018800?\nCypher query: MATCH (v:Vocabulary)-[:HierarchicalStructure]->(d:Vocabulary {{id: \'mondo:0018800\'}}) RETURN v.name, v.id\n\nQuestion: List all journals with the ISO abbreviation \'J Clin Invest\'.\nCypher Query: '}]
gpt-4o
[{'role': 'user', 'content': 'Task:Generate Cypher statement to query a graph database.\nInstructions:\nUse only the provided relationship types and properties in the schema.\nDo not use any other relationship types or properties that are not provided.\nSchema:\nNode properties are the following:\nArticle {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST},Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING},Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\nRelationship properties are the following:\nContainTerm {source: STRING, normalized_name: STRING, type: STRING, prob: FLOAT},VariantToDiseaseAssociation {source: STRING, type: STRING, risk allele: STRING, from_article: STRING},VariantToGeneAssociation {source: STRING, type: STRING, risk allele: STRING},HierarchicalStructure {source: STRING, type: STRING},Cite {source: STRING},GeneToPathwayAssociation {source: STRING, type: STRING},DiseaseToPhenotypicFeatureAssociation {source: STRING, type: STRING},ChemicalAffectsGeneAssociation {source: STRING, type: STRING},ChemicalToChemicalAssociation {source: STRING, type: STRING},GeneToGoTermAssociation {source: STRING, type: STRING},ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation {source: STRING, type: STRING},ExposureEventToOutcomeAssociation {source: STRING, type: STRING},GeneToDiseaseAssociation {source: STRING, type: STRING},GeneToGeneAssociation {source: STRING, type: STRING},GeneToExpressionSiteAssociation {type: STRING, source: STRING},OntologyMapping {source: STRING, score: FLOAT}\nThe relationships are the following:\n(:Article)-[:PublishedIn]->(:Journal),(:Article)-[:ContainTerm]->(:Vocabulary),(:Article)-[:Cite]->(:Article),(:Vocabulary)-[:HierarchicalStructure]->(:Vocabulary),(:Vocabulary)-[:OntologyMapping]->(:Vocabulary),(:Vocabulary)-[:GeneToDiseaseAssociation]->(:Vocabulary),(:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToExpressionSiteAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToPathwayAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGoTermAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalToChemicalAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToDiseaseAssociation]->(:Vocabulary)\n\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\nExamples: Here are a few examples of generated Cypher statements for particular questions:\n\n\nQuestion: What is the articles with PubMed ID 23?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'23\' RETURN a.title, a.authors, a.pubdate\n\nQuestion: How many articles have citation > 50? Return their title and authors\nCypher query: MATCH (a:Article) WHERE a.n_citation > 50  RETURN a.title, a.authors\n\nQuestion: Which gene is named TP53?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: get the id of type 2 diabetes?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'type 2 diabetes\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: define breast cancer\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'breast cancer\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: What are the articles published in a specific journal?\nCypher query: MATCH (a:Article)-[:PublishedIn]-(j:Journal) WHERE j.title = \'Journal Name\' RETURN a.title\n\nQuestion: How many authors collaborated on a particular article?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'PubMed ID\' RETURN size(a.authors)\n\nQuestion: Which article is with a specific title or abstract?\nCypher query: CALL db.index.fulltext.queryNodes("article_Title", "\'Title or Abstract\'") YIELD node, score WITH node as n, score LIMIT 10 RETURN n.pubmedid, n.title, n.n_citation\n\nQuestion: What are the articles that cite a specific article?\nCypher query: MATCH (a:Article {{pubmedid: \'PubMed ID\'}})<-[:Cite]-(c:Article) RETURN c.title\n\nQuestion: Based on the curated databases, what diseases are related to a specific gene?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:HGNC_ID\'}})-[:GeneToDiseaseAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation\n\nQuestion: What are the top journals by the number of articles published?\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) RETURN j.title, count(a) AS num_articles ORDER BY num_articles DESC LIMIT 10\n\nQuestion: What are the top 10 cited articles by a particular journal\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) WHERE j.title=\'The Plant Journal\' WITH a ORDER BY a.n_citation DESC RETURN a.title LIMIT 10\n\nQuestion: How many articles were published in a specific year, e.g 2020?\nCypher query: MATCH (a:Article) WHERE a.pubdate=2020 RETURN COUNT(a)\n\nQuestion: What are the articles published after a specific year?\nCypher query: MATCH (a:Article) WHERE a.pubdate > year RETURN a.title\n\nQuestion: What is the GO term with ID 0035267?\nCypher query: MATCH (v:Vocabulary {{id: \'go:0035267\'}}) RETURN v.name\n\nQuestion: What are the aliases of the gene with HGNC id 11997?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:11997\'}}) RETURN v.synonyms\n\nQuestion: What is the disease with DOID 0050606?\nCypher query: MATCH (v:Vocabulary {{id: \'doid:0050606\'}}) RETURN v.name\n\nQuestion: What are the cross references of the MESH term D007644 in other ontologies?\nCypher query: MATCH (v:Vocabulary {{id: \'mesh:D007644\'}})-[:OntologyMapping]->(o:Vocabulary) RETURN o.name, o.id\n\nQuestion: What is the most cited article of a specific biomedical concept?\nCypher query: MATCH (v:Vocabulary {{id: \'Concept ID\'}})-[:ContainTerm]-(a:Article) RETURN a.title ORDER BY a.n_citation DESC LIMIT 1\n\nQuestion: Which genetic variant affects a specific gene?\nCypher query: MATCH (:Vocabulary {{id: \'Concept ID\'}})-[:VariantToGeneAssociation]-(v:Vocabulary) RETURN v.id, v.name\n\nQuestion: What is the reference and alternative alleles of the genetic variant with RSID rs35850753?\nCypher query: MATCH (v:Vocabulary {{id: \'rs35850753\'}}) RETURN v.ref, v.alt\n\nQuestion: What are the subclasses of the disease mondo:0018800?\nCypher query: MATCH (v:Vocabulary)-[:HierarchicalStructure]->(d:Vocabulary {{id: \'mondo:0018800\'}}) RETURN v.name, v.id\n\nQuestion: Which articles are most frequently cited and published in journals with online ISSN \'1476-4687\'?\nCypher Query: '}]
gpt-4o
[{'role': 'user', 'content': 'Task:Generate Cypher statement to query a graph database.\nInstructions:\nUse only the provided relationship types and properties in the schema.\nDo not use any other relationship types or properties that are not provided.\nSchema:\nNode properties are the following:\nArticle {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST},Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING},Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\nRelationship properties are the following:\nContainTerm {source: STRING, normalized_name: STRING, type: STRING, prob: FLOAT},VariantToDiseaseAssociation {source: STRING, type: STRING, risk allele: STRING, from_article: STRING},VariantToGeneAssociation {source: STRING, type: STRING, risk allele: STRING},HierarchicalStructure {source: STRING, type: STRING},Cite {source: STRING},GeneToPathwayAssociation {source: STRING, type: STRING},DiseaseToPhenotypicFeatureAssociation {source: STRING, type: STRING},ChemicalAffectsGeneAssociation {source: STRING, type: STRING},ChemicalToChemicalAssociation {source: STRING, type: STRING},GeneToGoTermAssociation {source: STRING, type: STRING},ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation {source: STRING, type: STRING},ExposureEventToOutcomeAssociation {source: STRING, type: STRING},GeneToDiseaseAssociation {source: STRING, type: STRING},GeneToGeneAssociation {source: STRING, type: STRING},GeneToExpressionSiteAssociation {type: STRING, source: STRING},OntologyMapping {source: STRING, score: FLOAT}\nThe relationships are the following:\n(:Article)-[:PublishedIn]->(:Journal),(:Article)-[:ContainTerm]->(:Vocabulary),(:Article)-[:Cite]->(:Article),(:Vocabulary)-[:HierarchicalStructure]->(:Vocabulary),(:Vocabulary)-[:OntologyMapping]->(:Vocabulary),(:Vocabulary)-[:GeneToDiseaseAssociation]->(:Vocabulary),(:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToExpressionSiteAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToPathwayAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGoTermAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalToChemicalAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToDiseaseAssociation]->(:Vocabulary)\n\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\nExamples: Here are a few examples of generated Cypher statements for particular questions:\n\n\nQuestion: What is the articles with PubMed ID 23?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'23\' RETURN a.title, a.authors, a.pubdate\n\nQuestion: How many articles have citation > 50? Return their title and authors\nCypher query: MATCH (a:Article) WHERE a.n_citation > 50  RETURN a.title, a.authors\n\nQuestion: Which gene is named TP53?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: get the id of type 2 diabetes?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'type 2 diabetes\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: define breast cancer\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'breast cancer\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: What are the articles published in a specific journal?\nCypher query: MATCH (a:Article)-[:PublishedIn]-(j:Journal) WHERE j.title = \'Journal Name\' RETURN a.title\n\nQuestion: How many authors collaborated on a particular article?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'PubMed ID\' RETURN size(a.authors)\n\nQuestion: Which article is with a specific title or abstract?\nCypher query: CALL db.index.fulltext.queryNodes("article_Title", "\'Title or Abstract\'") YIELD node, score WITH node as n, score LIMIT 10 RETURN n.pubmedid, n.title, n.n_citation\n\nQuestion: What are the articles that cite a specific article?\nCypher query: MATCH (a:Article {{pubmedid: \'PubMed ID\'}})<-[:Cite]-(c:Article) RETURN c.title\n\nQuestion: Based on the curated databases, what diseases are related to a specific gene?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:HGNC_ID\'}})-[:GeneToDiseaseAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation\n\nQuestion: What are the top journals by the number of articles published?\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) RETURN j.title, count(a) AS num_articles ORDER BY num_articles DESC LIMIT 10\n\nQuestion: What are the top 10 cited articles by a particular journal\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) WHERE j.title=\'The Plant Journal\' WITH a ORDER BY a.n_citation DESC RETURN a.title LIMIT 10\n\nQuestion: How many articles were published in a specific year, e.g 2020?\nCypher query: MATCH (a:Article) WHERE a.pubdate=2020 RETURN COUNT(a)\n\nQuestion: What are the articles published after a specific year?\nCypher query: MATCH (a:Article) WHERE a.pubdate > year RETURN a.title\n\nQuestion: What is the GO term with ID 0035267?\nCypher query: MATCH (v:Vocabulary {{id: \'go:0035267\'}}) RETURN v.name\n\nQuestion: What are the aliases of the gene with HGNC id 11997?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:11997\'}}) RETURN v.synonyms\n\nQuestion: What is the disease with DOID 0050606?\nCypher query: MATCH (v:Vocabulary {{id: \'doid:0050606\'}}) RETURN v.name\n\nQuestion: What are the cross references of the MESH term D007644 in other ontologies?\nCypher query: MATCH (v:Vocabulary {{id: \'mesh:D007644\'}})-[:OntologyMapping]->(o:Vocabulary) RETURN o.name, o.id\n\nQuestion: What is the most cited article of a specific biomedical concept?\nCypher query: MATCH (v:Vocabulary {{id: \'Concept ID\'}})-[:ContainTerm]-(a:Article) RETURN a.title ORDER BY a.n_citation DESC LIMIT 1\n\nQuestion: Which genetic variant affects a specific gene?\nCypher query: MATCH (:Vocabulary {{id: \'Concept ID\'}})-[:VariantToGeneAssociation]-(v:Vocabulary) RETURN v.id, v.name\n\nQuestion: What is the reference and alternative alleles of the genetic variant with RSID rs35850753?\nCypher query: MATCH (v:Vocabulary {{id: \'rs35850753\'}}) RETURN v.ref, v.alt\n\nQuestion: What are the subclasses of the disease mondo:0018800?\nCypher query: MATCH (v:Vocabulary)-[:HierarchicalStructure]->(d:Vocabulary {{id: \'mondo:0018800\'}}) RETURN v.name, v.id\n\nQuestion: What are the most cited diseases associated with chemical exposure to \'benzene\'?\nCypher Query: '}]
gpt-4o
[{'role': 'user', 'content': 'Task:Generate Cypher statement to query a graph database.\nInstructions:\nUse only the provided relationship types and properties in the schema.\nDo not use any other relationship types or properties that are not provided.\nSchema:\nNode properties are the following:\nArticle {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST},Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING},Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\nRelationship properties are the following:\nContainTerm {source: STRING, normalized_name: STRING, type: STRING, prob: FLOAT},VariantToDiseaseAssociation {source: STRING, type: STRING, risk allele: STRING, from_article: STRING},VariantToGeneAssociation {source: STRING, type: STRING, risk allele: STRING},HierarchicalStructure {source: STRING, type: STRING},Cite {source: STRING},GeneToPathwayAssociation {source: STRING, type: STRING},DiseaseToPhenotypicFeatureAssociation {source: STRING, type: STRING},ChemicalAffectsGeneAssociation {source: STRING, type: STRING},ChemicalToChemicalAssociation {source: STRING, type: STRING},GeneToGoTermAssociation {source: STRING, type: STRING},ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation {source: STRING, type: STRING},ExposureEventToOutcomeAssociation {source: STRING, type: STRING},GeneToDiseaseAssociation {source: STRING, type: STRING},GeneToGeneAssociation {source: STRING, type: STRING},GeneToExpressionSiteAssociation {type: STRING, source: STRING},OntologyMapping {source: STRING, score: FLOAT}\nThe relationships are the following:\n(:Article)-[:PublishedIn]->(:Journal),(:Article)-[:ContainTerm]->(:Vocabulary),(:Article)-[:Cite]->(:Article),(:Vocabulary)-[:HierarchicalStructure]->(:Vocabulary),(:Vocabulary)-[:OntologyMapping]->(:Vocabulary),(:Vocabulary)-[:GeneToDiseaseAssociation]->(:Vocabulary),(:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToExpressionSiteAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToPathwayAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGoTermAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalToChemicalAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToDiseaseAssociation]->(:Vocabulary)\n\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\nExamples: Here are a few examples of generated Cypher statements for particular questions:\n\n\nQuestion: What is the articles with PubMed ID 23?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'23\' RETURN a.title, a.authors, a.pubdate\n\nQuestion: How many articles have citation > 50? Return their title and authors\nCypher query: MATCH (a:Article) WHERE a.n_citation > 50  RETURN a.title, a.authors\n\nQuestion: Which gene is named TP53?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: get the id of type 2 diabetes?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'type 2 diabetes\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: define breast cancer\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'breast cancer\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: What are the articles published in a specific journal?\nCypher query: MATCH (a:Article)-[:PublishedIn]-(j:Journal) WHERE j.title = \'Journal Name\' RETURN a.title\n\nQuestion: How many authors collaborated on a particular article?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'PubMed ID\' RETURN size(a.authors)\n\nQuestion: Which article is with a specific title or abstract?\nCypher query: CALL db.index.fulltext.queryNodes("article_Title", "\'Title or Abstract\'") YIELD node, score WITH node as n, score LIMIT 10 RETURN n.pubmedid, n.title, n.n_citation\n\nQuestion: What are the articles that cite a specific article?\nCypher query: MATCH (a:Article {{pubmedid: \'PubMed ID\'}})<-[:Cite]-(c:Article) RETURN c.title\n\nQuestion: Based on the curated databases, what diseases are related to a specific gene?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:HGNC_ID\'}})-[:GeneToDiseaseAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation\n\nQuestion: What are the top journals by the number of articles published?\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) RETURN j.title, count(a) AS num_articles ORDER BY num_articles DESC LIMIT 10\n\nQuestion: What are the top 10 cited articles by a particular journal\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) WHERE j.title=\'The Plant Journal\' WITH a ORDER BY a.n_citation DESC RETURN a.title LIMIT 10\n\nQuestion: How many articles were published in a specific year, e.g 2020?\nCypher query: MATCH (a:Article) WHERE a.pubdate=2020 RETURN COUNT(a)\n\nQuestion: What are the articles published after a specific year?\nCypher query: MATCH (a:Article) WHERE a.pubdate > year RETURN a.title\n\nQuestion: What is the GO term with ID 0035267?\nCypher query: MATCH (v:Vocabulary {{id: \'go:0035267\'}}) RETURN v.name\n\nQuestion: What are the aliases of the gene with HGNC id 11997?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:11997\'}}) RETURN v.synonyms\n\nQuestion: What is the disease with DOID 0050606?\nCypher query: MATCH (v:Vocabulary {{id: \'doid:0050606\'}}) RETURN v.name\n\nQuestion: What are the cross references of the MESH term D007644 in other ontologies?\nCypher query: MATCH (v:Vocabulary {{id: \'mesh:D007644\'}})-[:OntologyMapping]->(o:Vocabulary) RETURN o.name, o.id\n\nQuestion: What is the most cited article of a specific biomedical concept?\nCypher query: MATCH (v:Vocabulary {{id: \'Concept ID\'}})-[:ContainTerm]-(a:Article) RETURN a.title ORDER BY a.n_citation DESC LIMIT 1\n\nQuestion: Which genetic variant affects a specific gene?\nCypher query: MATCH (:Vocabulary {{id: \'Concept ID\'}})-[:VariantToGeneAssociation]-(v:Vocabulary) RETURN v.id, v.name\n\nQuestion: What is the reference and alternative alleles of the genetic variant with RSID rs35850753?\nCypher query: MATCH (v:Vocabulary {{id: \'rs35850753\'}}) RETURN v.ref, v.alt\n\nQuestion: What are the subclasses of the disease mondo:0018800?\nCypher query: MATCH (v:Vocabulary)-[:HierarchicalStructure]->(d:Vocabulary {{id: \'mondo:0018800\'}}) RETURN v.name, v.id\n\nQuestion: Find all diseases that are connected to the gene with HGNC ID \'HGNC:1097\' and return the disease name and its citation count.\nCypher Query: '}]
gpt-4o
[{'role': 'user', 'content': 'Task:Generate Cypher statement to query a graph database.\nInstructions:\nUse only the provided relationship types and properties in the schema.\nDo not use any other relationship types or properties that are not provided.\nSchema:\nNode properties are the following:\nArticle {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST},Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING},Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\nRelationship properties are the following:\nContainTerm {source: STRING, normalized_name: STRING, type: STRING, prob: FLOAT},VariantToDiseaseAssociation {source: STRING, type: STRING, risk allele: STRING, from_article: STRING},VariantToGeneAssociation {source: STRING, type: STRING, risk allele: STRING},HierarchicalStructure {source: STRING, type: STRING},Cite {source: STRING},GeneToPathwayAssociation {source: STRING, type: STRING},DiseaseToPhenotypicFeatureAssociation {source: STRING, type: STRING},ChemicalAffectsGeneAssociation {source: STRING, type: STRING},ChemicalToChemicalAssociation {source: STRING, type: STRING},GeneToGoTermAssociation {source: STRING, type: STRING},ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation {source: STRING, type: STRING},ExposureEventToOutcomeAssociation {source: STRING, type: STRING},GeneToDiseaseAssociation {source: STRING, type: STRING},GeneToGeneAssociation {source: STRING, type: STRING},GeneToExpressionSiteAssociation {type: STRING, source: STRING},OntologyMapping {source: STRING, score: FLOAT}\nThe relationships are the following:\n(:Article)-[:PublishedIn]->(:Journal),(:Article)-[:ContainTerm]->(:Vocabulary),(:Article)-[:Cite]->(:Article),(:Vocabulary)-[:HierarchicalStructure]->(:Vocabulary),(:Vocabulary)-[:OntologyMapping]->(:Vocabulary),(:Vocabulary)-[:GeneToDiseaseAssociation]->(:Vocabulary),(:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToExpressionSiteAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToPathwayAssociation]->(:Vocabulary),(:Vocabulary)-[:GeneToGoTermAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:ChemicalToChemicalAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToGeneAssociation]->(:Vocabulary),(:Vocabulary)-[:VariantToDiseaseAssociation]->(:Vocabulary)\n\nNote: Do not include any explanations or apologies in your responses.\nDo not respond to any questions that might ask anything else than for you to construct a Cypher statement.\nDo not include any text except the generated Cypher statement.\nExamples: Here are a few examples of generated Cypher statements for particular questions:\n\n\nQuestion: What is the articles with PubMed ID 23?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'23\' RETURN a.title, a.authors, a.pubdate\n\nQuestion: How many articles have citation > 50? Return their title and authors\nCypher query: MATCH (a:Article) WHERE a.n_citation > 50  RETURN a.title, a.authors\n\nQuestion: Which gene is named TP53?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: get the id of type 2 diabetes?\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'type 2 diabetes\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: define breast cancer\nCypher query: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'breast cancer\'") YIELD node, score WITH node as n, score LIMIT 7 RETURN n.id, n.name, n.description ORDER BY CASE WHEN n.n_citation IS NOT NULL THEN n.n_citation ELSE 0 END DESC\n\nQuestion: What are the articles published in a specific journal?\nCypher query: MATCH (a:Article)-[:PublishedIn]-(j:Journal) WHERE j.title = \'Journal Name\' RETURN a.title\n\nQuestion: How many authors collaborated on a particular article?\nCypher query: MATCH (a:Article) WHERE a.pubmedid = \'PubMed ID\' RETURN size(a.authors)\n\nQuestion: Which article is with a specific title or abstract?\nCypher query: CALL db.index.fulltext.queryNodes("article_Title", "\'Title or Abstract\'") YIELD node, score WITH node as n, score LIMIT 10 RETURN n.pubmedid, n.title, n.n_citation\n\nQuestion: What are the articles that cite a specific article?\nCypher query: MATCH (a:Article {{pubmedid: \'PubMed ID\'}})<-[:Cite]-(c:Article) RETURN c.title\n\nQuestion: Based on the curated databases, what diseases are related to a specific gene?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:HGNC_ID\'}})-[:GeneToDiseaseAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation\n\nQuestion: What are the top journals by the number of articles published?\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) RETURN j.title, count(a) AS num_articles ORDER BY num_articles DESC LIMIT 10\n\nQuestion: What are the top 10 cited articles by a particular journal\nCypher query: MATCH (j:Journal)-[:PublishedIn]-(a:Article) WHERE j.title=\'The Plant Journal\' WITH a ORDER BY a.n_citation DESC RETURN a.title LIMIT 10\n\nQuestion: How many articles were published in a specific year, e.g 2020?\nCypher query: MATCH (a:Article) WHERE a.pubdate=2020 RETURN COUNT(a)\n\nQuestion: What are the articles published after a specific year?\nCypher query: MATCH (a:Article) WHERE a.pubdate > year RETURN a.title\n\nQuestion: What is the GO term with ID 0035267?\nCypher query: MATCH (v:Vocabulary {{id: \'go:0035267\'}}) RETURN v.name\n\nQuestion: What are the aliases of the gene with HGNC id 11997?\nCypher query: MATCH (v:Vocabulary {{id: \'hgnc:11997\'}}) RETURN v.synonyms\n\nQuestion: What is the disease with DOID 0050606?\nCypher query: MATCH (v:Vocabulary {{id: \'doid:0050606\'}}) RETURN v.name\n\nQuestion: What are the cross references of the MESH term D007644 in other ontologies?\nCypher query: MATCH (v:Vocabulary {{id: \'mesh:D007644\'}})-[:OntologyMapping]->(o:Vocabulary) RETURN o.name, o.id\n\nQuestion: What is the most cited article of a specific biomedical concept?\nCypher query: MATCH (v:Vocabulary {{id: \'Concept ID\'}})-[:ContainTerm]-(a:Article) RETURN a.title ORDER BY a.n_citation DESC LIMIT 1\n\nQuestion: Which genetic variant affects a specific gene?\nCypher query: MATCH (:Vocabulary {{id: \'Concept ID\'}})-[:VariantToGeneAssociation]-(v:Vocabulary) RETURN v.id, v.name\n\nQuestion: What is the reference and alternative alleles of the genetic variant with RSID rs35850753?\nCypher query: MATCH (v:Vocabulary {{id: \'rs35850753\'}}) RETURN v.ref, v.alt\n\nQuestion: What are the subclasses of the disease mondo:0018800?\nCypher query: MATCH (v:Vocabulary)-[:HierarchicalStructure]->(d:Vocabulary {{id: \'mondo:0018800\'}}) RETURN v.name, v.id\n\nQuestion: How many articles were published between 2018 and 2021?\nCypher Query: '}]
Answers with original prompt:
["MATCH (g:Vocabulary {name: 'EGFR'})-[:GeneToPathwayAssociation]->(p:Vocabulary) RETURN p.name, p.description", 'MATCH (v:Vocabulary)-[:OntologyMapping]->(o:Vocabulary) \nRETURN v.name, v.id, v.n_citation \nORDER BY v.n_citation DESC \nLIMIT 5', "MATCH (v:Vocabulary {name: 'BRCA1'})<-[:ContainTerm]-(a:Article) \nRETURN a.title, a.n_citation \nORDER BY a.n_citation DESC \nLIMIT 5", "MATCH (a:Article) WHERE a.doi = '10.3233/JAD-161250' RETURN a.title, a.authors, a.pubdate", "MATCH (v:Vocabulary)-[:VariantToDiseaseAssociation]->(d:Vocabulary) WHERE d.name CONTAINS 'diabetes' RETURN v.id, v.name, v.`risk allele`", "MATCH (j:Journal) WHERE j.iso_abbrevation = 'J Clin Invest' RETURN j.title, j.id", "MATCH (a:Article)-[:PublishedIn]->(j:Journal) WHERE j.issn_online = '1476-4687' RETURN a.title, a.n_citation ORDER BY a.n_citation DESC LIMIT 10", "MATCH (v:Vocabulary)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) WHERE v.name = 'benzene' RETURN d.name, d.id, d.n_citation ORDER BY d.n_citation DESC LIMIT 10", "MATCH (v:Vocabulary {id: 'hgnc:1097'})-[:GeneToDiseaseAssociation]->(d:Vocabulary) RETURN d.name, d.n_citation", 'MATCH (a:Article) WHERE a.pubdate >= 2018 AND a.pubdate <= 2021 RETURN COUNT(a)']

gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': "List all pathways associated with the gene 'EGFR' and include each pathway's description."}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': "List all pathways associated with the gene 'EGFR' and include each pathway's description."}, {'role': 'assistant', 'content': 'To generate the Cypher query for this request, we need to follow these steps:\n\n1. **Identify the Vocabulary Node for \'EGFR\':** We need to find the node in the Vocabulary that corresponds to the gene \'EGFR\'. This can be done using a full-text search on the vocabulary names.\n\n2. **Match Pathways Associated with \'EGFR\':** Once we have the \'EGFR\' node, we will look for pathways that are associated with it. This is done using the `GeneToPathwayAssociation` relationship.\n\n3. **Return Pathway Details:** For each pathway associated with \'EGFR\', we need to return the pathway\'s name and description.\n\n4. **Limit the Results:** To ensure the query does not return an excessive number of results, we will apply a limit.\n\nHere is the Cypher query that implements these steps:\n\n```cypher\nCALL db.index.fulltext.queryNodes("vocabulary_Names", "\'EGFR\'") YIELD node AS egfr\nMATCH (egfr)-[:GeneToPathwayAssociation]->(pathway:Vocabulary)\nRETURN pathway.name, pathway.description LIMIT 100\n```'}, {'role': 'user', 'content': '====== This is a System Message ======\nNow, echo the above cypher query, do not include any explanations or apologies, do not include any spaces, new lines, or quotes at the beginning or at end.\n====== End of System Message ======'}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': 'List the top 5 most frequently cited vocabulary terms that are cross-referenced with other ontologies.'}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': 'List the top 5 most frequently cited vocabulary terms that are cross-referenced with other ontologies.'}, {'role': 'assistant', 'content': 'To address this query, we need to follow these steps:\n\n1. Identify vocabulary terms that have cross-references with other ontologies. This can be achieved by looking for terms involved in the `OntologyMapping` relationship.\n\n2. For each vocabulary term identified in step 1, we need to determine how frequently it has been cited. This information is available in the `n_citation` property of the `Vocabulary` node.\n\n3. Sort these vocabulary terms by their citation count in descending order to identify the most frequently cited terms.\n\n4. Limit the results to the top 5 vocabulary terms.\n\nHere is the Cypher query that implements these steps:\n\n```cypher\nMATCH (v:Vocabulary)-[:OntologyMapping]->(:Vocabulary)\nRETURN v.name, v.id, v.n_citation\nORDER BY v.n_citation DESC\nLIMIT 5\n```'}, {'role': 'user', 'content': '====== This is a System Message ======\nNow, echo the above cypher query, do not include any explanations or apologies, do not include any spaces, new lines, or quotes at the beginning or at end.\n====== End of System Message ======'}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': "What are the top 5 articles mentioning the gene 'BRCA1' by citation count?"}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': "What are the top 5 articles mentioning the gene 'BRCA1' by citation count?"}, {'role': 'assistant', 'content': 'To generate the Cypher query for this request, follow these steps:\n\n1. **Identify the Vocabulary Node:** We need to find the vocabulary node corresponding to the gene \'BRCA1\'. This can be done using a full-text search on the vocabulary names.\n\n2. **Match Articles Containing the Term:** Once we have the vocabulary node for \'BRCA1\', we need to find all articles that contain this term. This is done by matching articles that have a `ContainTerm` relationship with the vocabulary node.\n\n3. **Order by Citation Count:** We need to order the articles by their citation count in descending order to find the most cited ones.\n\n4. **Limit the Results:** Since the request is for the top 5 articles, we will limit the results to 5.\n\nHere is the Cypher query that implements these steps:\n\n```cypher\nCALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node AS brca1\nMATCH (article:Article)-[:ContainTerm]->(brca1)\nRETURN article.title, article.n_citation\nORDER BY article.n_citation DESC\nLIMIT 5\n```'}, {'role': 'user', 'content': '====== This is a System Message ======\nNow, echo the above cypher query, do not include any explanations or apologies, do not include any spaces, new lines, or quotes at the beginning or at end.\n====== End of System Message ======'}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': 'What is the article with the DOI 10.3233/JAD-161250?'}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': 'What is the article with the DOI 10.3233/JAD-161250?'}, {'role': 'assistant', 'content': "To find the article with a specific DOI, we need to perform the following steps:\n\n1. Use the `MATCH` clause to search for an `Article` node with the property `doi` matching the given DOI value.\n2. Retrieve the relevant details of the article, such as its title and publication date.\n\nHere is the Cypher query to achieve this:\n\n```cypher\nMATCH (a:Article {doi: '10.3233/JAD-161250'}) \nRETURN a.title, a.pubdate, a.authors, a.journal LIMIT 1\n```\n\nThis query will return the title, publication date, authors, and journal of the article with the specified DOI."}, {'role': 'user', 'content': '====== This is a System Message ======\nNow, echo the above cypher query, do not include any explanations or apologies, do not include any spaces, new lines, or quotes at the beginning or at end.\n====== End of System Message ======'}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': "List all genetic variants associated with 'diabetes' and include their risk alleles."}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': "List all genetic variants associated with 'diabetes' and include their risk alleles."}, {'role': 'assistant', 'content': 'To generate the Cypher query for this request, we need to follow these steps:\n\n1. **Search for the Vocabulary Term**: We need to find the vocabulary node that corresponds to \'diabetes\'. This can be done using a full-text search on the vocabulary names.\n\n2. **Find Associated Genetic Variants**: Once we have the \'diabetes\' node, we need to find all genetic variants that are associated with it. This is achieved through the `VariantToDiseaseAssociation` relationship.\n\n3. **Return the Genetic Variants and Risk Alleles**: For each genetic variant associated with \'diabetes\', we will return its name and risk allele.\n\n4. **Limit the Results**: To prevent the query from returning too many results, we will set a limit of 100.\n\nHere is the Cypher query that implements these steps:\n\n```cypher\nCALL db.index.fulltext.queryNodes("vocabulary_Names", "\'diabetes\'") YIELD node AS diabetes\nMATCH (variant:Vocabulary)-[r:VariantToDiseaseAssociation]->(diabetes)\nRETURN variant.name, variant.id, r.`risk allele` LIMIT 100\n```'}, {'role': 'user', 'content': '====== This is a System Message ======\nNow, echo the above cypher query, do not include any explanations or apologies, do not include any spaces, new lines, or quotes at the beginning or at end.\n====== End of System Message ======'}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': "List all journals with the ISO abbreviation 'J Clin Invest'."}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': "List all journals with the ISO abbreviation 'J Clin Invest'."}, {'role': 'assistant', 'content': "To list all journals with the ISO abbreviation 'J Clin Invest', we need to perform the following steps:\n\n1. Identify the `Journal` nodes in the graph database.\n2. Filter these nodes based on the `iso_abbrevation` property, which should match 'J Clin Invest'.\n3. Return the titles of these journals.\n\nHere's the Cypher query to achieve this:\n\n```cypher\nMATCH (j:Journal {iso_abbrevation: 'J Clin Invest'}) \nRETURN j.title LIMIT 100\n```"}, {'role': 'user', 'content': '====== This is a System Message ======\nNow, echo the above cypher query, do not include any explanations or apologies, do not include any spaces, new lines, or quotes at the beginning or at end.\n====== End of System Message ======'}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': "Which articles are most frequently cited and published in journals with online ISSN '1476-4687'?"}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': "Which articles are most frequently cited and published in journals with online ISSN '1476-4687'?"}, {'role': 'assistant', 'content': "To address this query, we need to follow these steps:\n\n1. Identify the journals with the online ISSN '1476-4687'.\n2. Find articles that are published in these journals.\n3. Retrieve the citation count for each of these articles.\n4. Sort the articles by their citation count in descending order to find the most frequently cited ones.\n5. Limit the results to prevent returning too many records.\n\nHere's the Cypher query to achieve this:\n\n```cypher\nMATCH (j:Journal {issn_online: '1476-4687'})<-[:PublishedIn]-(a:Article)\nRETURN a.title, a.n_citation\nORDER BY a.n_citation DESC\nLIMIT 100\n``` \n\nThis query will return the titles of the most frequently cited articles published in journals with the specified online ISSN, sorted by their citation count."}, {'role': 'user', 'content': '====== This is a System Message ======\nNow, echo the above cypher query, do not include any explanations or apologies, do not include any spaces, new lines, or quotes at the beginning or at end.\n====== End of System Message ======'}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': "What are the most cited diseases associated with chemical exposure to 'benzene'?"}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': "What are the most cited diseases associated with chemical exposure to 'benzene'?"}, {'role': 'assistant', 'content': 'To find the most cited diseases associated with chemical exposure to \'benzene\', we need to follow these steps:\n\n1. **Identify the Vocabulary Node for \'benzene\':**\n   - We will use a full-text search to find the vocabulary node that corresponds to \'benzene\'. This is done using `CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'benzene\'")`.\n\n2. **Find Diseases Associated with \'benzene\':**\n   - Once we have the node for \'benzene\', we will look for diseases that are associated with it through the `ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation` relationship.\n\n3. **Retrieve the Most Cited Diseases:**\n   - We will return the diseases sorted by their citation count in descending order to identify the most cited ones.\n\n4. **Limit the Results:**\n   - To ensure the query does not return an excessive number of results, we will limit the output to the top 100 most cited diseases.\n\nHere is the Cypher query to achieve this:\n\n```cypher\nCALL db.index.fulltext.queryNodes("vocabulary_Names", "\'benzene\'") YIELD node AS benzene\nMATCH (benzene)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(disease:Vocabulary)\nRETURN disease.name, disease.id, disease.n_citation\nORDER BY disease.n_citation DESC\nLIMIT 100\n```'}, {'role': 'user', 'content': '====== This is a System Message ======\nNow, echo the above cypher query, do not include any explanations or apologies, do not include any spaces, new lines, or quotes at the beginning or at end.\n====== End of System Message ======'}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': "Find all diseases that are connected to the gene with HGNC ID 'HGNC:1097' and return the disease name and its citation count."}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': "Find all diseases that are connected to the gene with HGNC ID 'HGNC:1097' and return the disease name and its citation count."}, {'role': 'assistant', 'content': "To find all diseases connected to the gene with HGNC ID 'HGNC:1097', we need to follow these steps:\n\n1. Identify the gene node in the graph database using the provided HGNC ID 'hgnc:1097'. Note that the ID should be in lowercase as per the instructions.\n2. Find all diseases that are associated with this gene. This can be done by traversing the `GeneToDiseaseAssociation` relationship from the gene node to the disease nodes.\n3. Retrieve the disease name and its citation count for each associated disease.\n4. Set a limit to the number of results returned to prevent exhausting system resources.\n\nHere's the Cypher query that implements these steps:\n\n```cypher\nMATCH (g:Vocabulary {id: 'hgnc:1097'})-[:GeneToDiseaseAssociation]->(d:Vocabulary)\nRETURN d.name, d.n_citation LIMIT 100\n```"}, {'role': 'user', 'content': '====== This is a System Message ======\nNow, echo the above cypher query, do not include any explanations or apologies, do not include any spaces, new lines, or quotes at the beginning or at end.\n====== End of System Message ======'}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': 'How many articles were published between 2018 and 2021?'}]
gpt-4o
[{'role': 'system', 'content': 'Task: Generate Cypher statement to query a graph database.\nInstructions:\n1. Use only the provided relationship types and properties in the schema.\n2. Do not use any other relationship types or properties that are not provided.\n\nNode properties are the following:\n1. Article: {pubmedid: STRING, title: STRING, pubdate: INTEGER, authors: LIST, journal: STRING, source: STRING, id: STRING, preferred_id: STRING, embedding: LIST, n_citation: INTEGER, doi: STRING, abstract: STRING, author_affiliations: LIST}\n2. Journal {title: STRING, med_abbrevation: STRING, iso_abbrevation: STRING, issn_print: STRING, issn_online: STRING, jrid: STRING, id: STRING, preferred_id: STRING}\n3. Vocabulary {name: STRING, id: STRING, preferred_id: STRING, n_citation: INTEGER, description: STRING, synonyms: LIST, embedding: LIST, rsid: STRING, ref: STRING, alt: STRING, source: STRING}\n\nRelationship Types and Properties:\n- Article to Journal:\n  - PublishedIn (no properties)\n\n- Article to Vocabulary:\n  - ContainTerm: source (STRING), normalized_name (STRING), type (STRING), prob (FLOAT)\n\n- Article to Article:\n  - Cite: source (STRING)\n\n- Vocabulary to Vocabulary (Associations):\n  - HierarchicalStructure: source, type\n  - OntologyMapping: source, score\n  - GeneToDiseaseAssociation: source, type\n  - DiseaseToPhenotypicFeatureAssociation: source, type\n  - ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation: source, type\n  - GeneToGeneAssociation: source, type\n  - GeneToExpressionSiteAssociation: source, type\n  - GeneToPathwayAssociation: source, type\n  - GeneToGoTermAssociation: source, type\n  - ChemicalAffectsGeneAssociation: source, type\n  - ChemicalToChemicalAssociation: source, type\n  - VariantToGeneAssociation: source, type, risk allele\n  - VariantToDiseaseAssociation: source, type, risk allele, from_article\nAll the properties in Vocabulary to Vocabulary relationships are STRING.\n\nYou need to generate the cypher query based on user\'s question, based on following requirements:\n1. Do not answer any questions unrelated to this topic or other than generating cypher query.\n2. You can only generate one cypher query at a time.\n3. The query must be read-only, you are not allowed to generate any query that may modify the database.\n4. Terms like chebi:17474, hp:0001250, the letters before : should be in lower case.\n5. You need to set a up limit if that query may return thousands or more results, even if user not requires. This is to prevent exausting system resources. This limit can be kind of large, like 50, 100, 200.\n\nHere are some examples:\nQ: List the diseases related to \'obesity\' that also involve gene associations, returning each disease and gene.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'obesity\'") YIELD node AS obesity MATCH (disease:Vocabulary)-[:GeneToDiseaseAssociation]->(gene:Vocabulary) WHERE disease.id = obesity.id RETURN disease.name, gene.name LIMIT 100\n\nQ: What vocabulary terms are considered synonyms of \'cholesterol\'?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cholesterol\'") YIELD node AS v RETURN v.synonyms LIMIT 100\n\nQ: Identify the diseases linked to the chemical identified by ChEBI:16015.\nA: MATCH (c:Vocabulary {id: \'chebi:16015\'})-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id LIMIT 100\n\nQ: What are the journals where articles about cardiovascular disease were published?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'cardiovascular disease\'") YIELD node AS v MATCH (a:Article)-[:ContainTerm]->(v) MATCH (a)-[:PublishedIn]->(j:Journal) RETURN DISTINCT j.title LIMIT 100\n\nQ: Which chemicals are associated with the disease \'asthma\' through a gene link, and what are their respective source databases?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'asthma\'") YIELD node AS asthma MATCH (asthma)<-[:GeneToDiseaseAssociation]-(gene:Vocabulary)-[:ChemicalAffectsGeneAssociation]->(chemical:Vocabulary) RETURN chemical.name, chemical.source LIMIT 100\n\nQ: Which chemical is related to the vocabulary term with ID \'chebi:17474\'?\nA: MATCH (c:Vocabulary {id: \'chebi:17474\'})-[:ChemicalToChemicalAssociation]->(related:Vocabulary) RETURN related.name, related.id LIMIT 100\n\nQ: What are the journals that published articles mentioning \'CRISPR\' technology with more than 5 authors?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'CRISPR\'") YIELD node AS crispr MATCH (article:Article)-[:ContainTerm]->(crispr) WHERE size(article.authors) > 5 MATCH (article)-[:PublishedIn]->(journal:Journal) RETURN DISTINCT journal.title LIMIT 100\n\nQ: How many times has the gene \'BRCA1\' been cited in articles?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node WITH node as v MATCH (a:Article)-[:ContainTerm]->(v) RETURN COUNT(a)\n\nQ: Which diseases are associated with the gene \'TP53\' and have more than 100 citations?\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'TP53\'") YIELD node AS gene MATCH (gene)-[:GeneToDiseaseAssociation]->(disease:Vocabulary) WHERE disease.n_citation > 100 RETURN disease.name, disease.id, disease.n_citation LIMIT 100\n\nQ: Identify the top 3 articles about \'epigenetics\' published in 2019 with the highest citation counts.\nA: CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'epigenetics\'") YIELD node AS epigenetics MATCH (article:Article {pubdate: 2019})-[:ContainTerm]->(epigenetics) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 3\n\nQ: Which articles mention the gene with HGNC ID 3432?\nA: MATCH (g:Vocabulary {id: \'hgnc:3432\'})<-[:ContainTerm]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: List articles in the database that are published in print ISSN 0028-0836.\nA: MATCH (j:Journal {issn_print: \'0028-0836\'})<-[:PublishedIn]-(a:Article) RETURN a.title, a.pubdate LIMIT 100\n\nQ: What phenotypic features are linked to the genetic variant rs123698?\nA: MATCH (v:Vocabulary {id: \'rs123698\'})-[:VariantToDiseaseAssociation]->(d:Vocabulary)-[:DiseaseToPhenotypicFeatureAssociation]->(p:Vocabulary) RETURN p.name, p.id LIMIT 100\n\nQ: Find the gene associated with the disease DOID:0080636.\nA: MATCH (d:Vocabulary {id: \'doid:0080636\'})<-[:GeneToDiseaseAssociation]-(g:Vocabulary) RETURN g.name, g.id LIMIT 100\n\nQ: What are the hierarchical children of the vocabulary term \'GO:0008152\'?\nA: MATCH (child:Vocabulary)-[:HierarchicalStructure]->(parent:Vocabulary {id: \'go:0008152\'}) RETURN child.name, child.id\n\nQ: What are the diseases associated with the vocabulary term identified by \'hp:0001250\'?\nA: MATCH (v:Vocabulary {id: \'hp:0001250\'})-[:DiseaseToPhenotypicFeatureAssociation]->(d:Vocabulary) RETURN d.name, d.id, d.n_citation LIMIT 100\n\n\n\nFor user\'s question, you need first to think and plan the process and what you need to do, show the detailed steps, and put the cypher query at last, after any explanation or steps.'}, {'role': 'user', 'content': 'How many articles were published between 2018 and 2021?'}, {'role': 'assistant', 'content': "To determine the number of articles published between 2018 and 2021, we need to follow these steps:\n\n1. Identify the `Article` nodes in the graph database.\n2. Filter the articles based on the `pubdate` property to include only those published between 2018 and 2021.\n3. Count the number of articles that meet this criterion.\n\nHere's the Cypher query to achieve this:\n\n```cypher\nMATCH (a:Article) \nWHERE a.pubdate >= 2018 AND a.pubdate <= 2021 \nRETURN COUNT(a) AS number_of_articles\n```"}, {'role': 'user', 'content': '====== This is a System Message ======\nNow, echo the above cypher query, do not include any explanations or apologies, do not include any spaces, new lines, or quotes at the beginning or at end.\n====== End of System Message ======'}]
Answers with my prompt:
['CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'EGFR\'") YIELD node AS egfr MATCH (egfr)-[:GeneToPathwayAssociation]->(pathway:Vocabulary) RETURN pathway.name, pathway.description LIMIT 100', 'MATCH(v:Vocabulary)-[:OntologyMapping]->(:Vocabulary)RETURN v.name,v.id,v.n_citation ORDER BY v.n_citation DESC LIMIT 5', 'CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'BRCA1\'") YIELD node AS brca1 MATCH (article:Article)-[:ContainTerm]->(brca1) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 5', "MATCH(a:Article{doi:'10.3233/JAD-161250'})RETURN a.title,a.pubdate,a.authors,a.journal LIMIT 1", 'CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'diabetes\'") YIELD node AS diabetes MATCH (variant:Vocabulary)-[r:VariantToDiseaseAssociation]->(diabetes) RETURN variant.name, variant.id, r.`risk allele` LIMIT 100', "MATCH(j:Journal{iso_abbrevation:'J Clin Invest'})RETURN j.title LIMIT 100", "MATCH(j:Journal{issn_online:'1476-4687'})<-[:PublishedIn]-(a:Article)RETURN a.title,a.n_citation ORDER BY a.n_citation DESC LIMIT 100", 'CALL db.index.fulltext.queryNodes("vocabulary_Names", "\'benzene\'") YIELD node AS benzene MATCH (benzene)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(disease:Vocabulary) RETURN disease.name, disease.id, disease.n_citation ORDER BY disease.n_citation DESC LIMIT 100', "MATCH(g:Vocabulary{id:'hgnc:1097'})-[:GeneToDiseaseAssociation]->(d:Vocabulary)RETURN d.name,d.n_citation LIMIT 100", 'MATCH(a:Article)WHERE a.pubdate>=2018 AND a.pubdate<=2021 RETURN COUNT(a)AS number_of_articles']

1. Question: List all pathways associated with the gene 'EGFR' and include each pathway's description.
Expected: CALL db.index.fulltext.queryNodes("vocabulary_Names", "'EGFR'") YIELD node AS gene MATCH (gene)-[:GeneToPathwayAssociation]->(pathway:Vocabulary) RETURN pathway.name, pathway.description LIMIT 100
Orig_ans: MATCH (g:Vocabulary {name: 'EGFR'})-[:GeneToPathwayAssociation]->(p:Vocabulary) RETURN p.name, p.description
My___ans: CALL db.index.fulltext.queryNodes("vocabulary_Names", "'EGFR'") YIELD node AS egfr MATCH (egfr)-[:GeneToPathwayAssociation]->(pathway:Vocabulary) RETURN pathway.name, pathway.description LIMIT 100
Expected: [{'pathway.name': 'Signaling by ERBB2 TMD/JMD mutants', 'pathway.description': 'Signaling by ERBB2 TMD/JMD mutants'}, {'pathway.name': 'Signaling by ERBB2 ECD mutants', 'pathway.description': 'Signaling by ERBB2 ECD mutants'}, {'pathway.name': 'Signaling by ERBB2 KD Mutants', 'pathway.description': 'Signaling by ERBB2 KD Mutants'}, {'pathway.name': 'Estrogen-dependent nuclear events downstream of ESR-membrane signaling', 'pathway.description': 'Estrogen-dependent nuclear events downstream of ESR-membrane signaling'}, {'pathway.name': 'HCMV Early Events', 'pathway.description': 'HCMV Early Events'}, {'pathway.name': 'NOTCH3 Activation and Transmission of Signal to the Nucleus', 'pathway.description': 'NOTCH3 Activation and Transmission of Signal to the Nucleus'}, {'pathway.name': 'Extra-nuclear estrogen signaling', 'pathway.description': 'Extra-nuclear estrogen signaling'}, {'pathway.name': 'TFAP2 (AP-2) family regulates transcription of growth factors and their receptors', 'pathway.description': 'TFAP2 (AP-2) family regulates transcription of growth factors and their receptors'}, {'pathway.name': 'Downregulation of ERBB2 signaling', 'pathway.description': 'Downregulation of ERBB2 signaling'}, {'pathway.name': 'PTK6 promotes HIF1A stabilization', 'pathway.description': 'PTK6 promotes HIF1A stabilization'}, {'pathway.name': 'Clathrin-mediated endocytosis', 'pathway.description': 'Clathrin-mediated endocytosis'}, {'pathway.name': 'Cargo recognition for clathrin-mediated endocytosis', 'pathway.description': 'Cargo recognition for clathrin-mediated endocytosis'}, {'pathway.name': 'ERBB2 Activates PTK6 Signaling', 'pathway.description': 'ERBB2 Activates PTK6 Signaling'}, {'pathway.name': 'PI5P, PP2A and IER3 Regulate PI3K/AKT Signaling', 'pathway.description': 'PI5P, PP2A and IER3 Regulate PI3K/AKT Signaling'}, {'pathway.name': 'ERBB2 Regulates Cell Motility', 'pathway.description': 'ERBB2 Regulates Cell Motility'}, {'pathway.name': 'RAF/MAP kinase cascade', 'pathway.description': 'RAF/MAP kinase cascade'}, {'pathway.name': 'Inhibition of Signaling by Overexpressed EGFR', 'pathway.description': 'Inhibition of Signaling by Overexpressed EGFR'}, {'pathway.name': 'Constitutive Signaling by EGFRvIII', 'pathway.description': 'Constitutive Signaling by EGFRvIII'}, {'pathway.name': 'Signal transduction by L1', 'pathway.description': 'Signal transduction by L1'}, {'pathway.name': 'Constitutive Signaling by Aberrant PI3K in Cancer', 'pathway.description': 'Constitutive Signaling by Aberrant PI3K in Cancer'}, {'pathway.name': 'EGFR Transactivation by Gastrin', 'pathway.description': 'EGFR Transactivation by Gastrin'}, {'pathway.name': 'EGFR interacts with phospholipase C-gamma', 'pathway.description': 'EGFR interacts with phospholipase C-gamma'}, {'pathway.name': 'PI3K events in ERBB2 signaling', 'pathway.description': 'PI3K events in ERBB2 signaling'}, {'pathway.name': 'GRB2 events in ERBB2 signaling', 'pathway.description': 'GRB2 events in ERBB2 signaling'}, {'pathway.name': 'EGFR downregulation', 'pathway.description': 'EGFR downregulation'}, {'pathway.name': 'SHC1 events in EGFR signaling', 'pathway.description': 'SHC1 events in EGFR signaling'}, {'pathway.name': 'GAB1 signalosome', 'pathway.description': 'GAB1 signalosome'}, {'pathway.name': 'GRB2 events in EGFR signaling', 'pathway.description': 'GRB2 events in EGFR signaling'}, {'pathway.name': 'Signaling by EGFR', 'pathway.description': 'Signaling by EGFR'}, {'pathway.name': 'PIP3 activates AKT signaling', 'pathway.description': 'PIP3 activates AKT signaling'}, {'pathway.name': 'PLCG1 events in ERBB2 signaling', 'pathway.description': 'PLCG1 events in ERBB2 signaling'}, {'pathway.name': 'SHC1 events in ERBB2 signaling', 'pathway.description': 'SHC1 events in ERBB2 signaling'}, {'pathway.name': 'Signaling by ERBB4', 'pathway.description': 'Signaling by ERBB4'}, {'pathway.name': 'Constitutive Signaling by Ligand-Responsive EGFR Cancer Variants', 'pathway.description': 'Constitutive Signaling by Ligand-Responsive EGFR Cancer Variants'}, {'pathway.name': 'Signaling by ERBB2', 'pathway.description': 'Signaling by ERBB2'}, {'pathway.name': 'CBL', 'pathway.description': 'Cbl proto-oncogene'}, {'pathway.name': 'ARHGEF7', 'pathway.description': 'Rho guanine nucleotide exchange factor 7'}, {'pathway.name': 'STAM', 'pathway.description': 'signal transducing adaptor molecule'}, {'pathway.name': 'UBB', 'pathway.description': 'ubiquitin B'}, {'pathway.name': 'BTC', 'pathway.description': 'betacellulin'}, {'pathway.name': 'EPS15L1', 'pathway.description': 'epidermal growth factor receptor pathway substrate 15 like 1'}, {'pathway.name': 'SH3GL3', 'pathway.description': 'SH3 domain containing GRB2 like 3, endophilin A3'}, {'pathway.name': 'SH3GL2', 'pathway.description': 'SH3 domain containing GRB2 like 2, endophilin A1'}, {'pathway.name': 'SH3GL1', 'pathway.description': 'SH3 domain containing GRB2 like 1, endophilin A2'}, {'pathway.name': 'TGFA', 'pathway.description': 'transforming growth factor alpha'}, {'pathway.name': 'RPS27A', 'pathway.description': 'ribosomal protein S27a'}, {'pathway.name': 'PTPRK', 'pathway.description': 'protein tyrosine phosphatase receptor type K'}, {'pathway.name': 'PTPN12', 'pathway.description': 'protein tyrosine phosphatase non-receptor type 12'}, {'pathway.name': 'PTPN3', 'pathway.description': 'protein tyrosine phosphatase non-receptor type 3'}, {'pathway.name': 'CDC42', 'pathway.description': 'cell division cycle 42'}, {'pathway.name': 'GRB2', 'pathway.description': 'growth factor receptor bound protein 2'}, {'pathway.name': 'SH3KBP1', 'pathway.description': 'SH3 domain containing kinase binding protein 1'}, {'pathway.name': 'EPN1', 'pathway.description': 'epsin 1'}, {'pathway.name': 'AREG', 'pathway.description': 'amphiregulin'}, {'pathway.name': 'EGFR', 'pathway.description': 'epidermal growth factor receptor'}, {'pathway.name': 'EGF', 'pathway.description': 'epidermal growth factor'}, {'pathway.name': 'HBEGF', 'pathway.description': 'heparin binding EGF like growth factor'}, {'pathway.name': 'EREG', 'pathway.description': 'epiregulin'}, {'pathway.name': 'EPS15', 'pathway.description': 'epidermal growth factor receptor pathway substrate 15'}, {'pathway.name': 'EPGN', 'pathway.description': 'epithelial mitogen'}, {'pathway.name': 'STAM2', 'pathway.description': 'signal transducing adaptor molecule 2'}, {'pathway.name': 'SPRY2', 'pathway.description': 'sprouty RTK signaling antagonist 2'}, {'pathway.name': 'SPRY1', 'pathway.description': 'sprouty RTK signaling antagonist 1'}, {'pathway.name': 'UBA52', 'pathway.description': 'ubiquitin A-52 residue ribosomal protein fusion product 1'}, {'pathway.name': 'ADAM12', 'pathway.description': 'ADAM metallopeptidase domain 12'}, {'pathway.name': 'ADAM17', 'pathway.description': 'ADAM metallopeptidase domain 17'}, {'pathway.name': 'BTC', 'pathway.description': 'betacellulin'}, {'pathway.name': 'TGFA', 'pathway.description': 'transforming growth factor alpha'}, {'pathway.name': 'SRC', 'pathway.description': 'SRC proto-oncogene, non-receptor tyrosine kinase'}, {'pathway.name': 'AREG', 'pathway.description': 'amphiregulin'}, {'pathway.name': 'LRIG1', 'pathway.description': 'leucine rich repeats and immunoglobulin like domains 1'}, {'pathway.name': 'EGFR', 'pathway.description': 'epidermal growth factor receptor'}, {'pathway.name': 'EGF', 'pathway.description': 'epidermal growth factor'}, {'pathway.name': 'HBEGF', 'pathway.description': 'heparin binding EGF like growth factor'}, {'pathway.name': 'EREG', 'pathway.description': 'epiregulin'}, {'pathway.name': 'AAMP', 'pathway.description': 'angio associated migratory cell protein'}, {'pathway.name': 'EPGN', 'pathway.description': 'epithelial mitogen'}, {'pathway.name': 'ADAM10', 'pathway.description': 'ADAM metallopeptidase domain 10'}, {'pathway.name': 'PRKCA', 'pathway.description': 'protein kinase C alpha'}, {'pathway.name': 'MMP3', 'pathway.description': 'matrix metallopeptidase 3'}, {'pathway.name': 'NRAS', 'pathway.description': 'NRAS proto-oncogene, GTPase'}, {'pathway.name': 'KRAS', 'pathway.description': 'KRAS proto-oncogene, GTPase'}, {'pathway.name': 'GRB2', 'pathway.description': 'growth factor receptor bound protein 2'}, {'pathway.name': 'HRAS', 'pathway.description': 'HRas proto-oncogene, GTPase'}, {'pathway.name': 'EGFR', 'pathway.description': 'epidermal growth factor receptor'}, {'pathway.name': 'HBEGF', 'pathway.description': 'heparin binding EGF like growth factor'}, {'pathway.name': 'SOS1', 'pathway.description': 'SOS Ras/Rac guanine nucleotide exchange factor 1'}, {'pathway.name': 'BTC', 'pathway.description': 'betacellulin'}, {'pathway.name': 'SHC1', 'pathway.description': 'SHC adaptor protein 1'}, {'pathway.name': 'TGFA', 'pathway.description': 'transforming growth factor alpha'}, {'pathway.name': 'NRAS', 'pathway.description': 'NRAS proto-oncogene, GTPase'}, {'pathway.name': 'KRAS', 'pathway.description': 'KRAS proto-oncogene, GTPase'}, {'pathway.name': 'GRB2', 'pathway.description': 'growth factor receptor bound protein 2'}, {'pathway.name': 'HRAS', 'pathway.description': 'HRas proto-oncogene, GTPase'}, {'pathway.name': 'AREG', 'pathway.description': 'amphiregulin'}, {'pathway.name': 'EGFR', 'pathway.description': 'epidermal growth factor receptor'}, {'pathway.name': 'EGF', 'pathway.description': 'epidermal growth factor'}, {'pathway.name': 'HBEGF', 'pathway.description': 'heparin binding EGF like growth factor'}, {'pathway.name': 'EREG', 'pathway.description': 'epiregulin'}, {'pathway.name': 'EPGN', 'pathway.description': 'epithelial mitogen'}]
Orig_res: [{'p.name': 'Signaling by ERBB2', 'p.description': 'Signaling by ERBB2'}, {'p.name': 'Constitutive Signaling by Ligand-Responsive EGFR Cancer Variants', 'p.description': 'Constitutive Signaling by Ligand-Responsive EGFR Cancer Variants'}, {'p.name': 'Signaling by ERBB4', 'p.description': 'Signaling by ERBB4'}, {'p.name': 'SHC1 events in ERBB2 signaling', 'p.description': 'SHC1 events in ERBB2 signaling'}, {'p.name': 'PLCG1 events in ERBB2 signaling', 'p.description': 'PLCG1 events in ERBB2 signaling'}, {'p.name': 'PIP3 activates AKT signaling', 'p.description': 'PIP3 activates AKT signaling'}, {'p.name': 'Signaling by EGFR', 'p.description': 'Signaling by EGFR'}, {'p.name': 'GRB2 events in EGFR signaling', 'p.description': 'GRB2 events in EGFR signaling'}, {'p.name': 'GAB1 signalosome', 'p.description': 'GAB1 signalosome'}, {'p.name': 'SHC1 events in EGFR signaling', 'p.description': 'SHC1 events in EGFR signaling'}, {'p.name': 'EGFR downregulation', 'p.description': 'EGFR downregulation'}, {'p.name': 'GRB2 events in ERBB2 signaling', 'p.description': 'GRB2 events in ERBB2 signaling'}, {'p.name': 'PI3K events in ERBB2 signaling', 'p.description': 'PI3K events in ERBB2 signaling'}, {'p.name': 'EGFR interacts with phospholipase C-gamma', 'p.description': 'EGFR interacts with phospholipase C-gamma'}, {'p.name': 'EGFR Transactivation by Gastrin', 'p.description': 'EGFR Transactivation by Gastrin'}, {'p.name': 'Constitutive Signaling by Aberrant PI3K in Cancer', 'p.description': 'Constitutive Signaling by Aberrant PI3K in Cancer'}, {'p.name': 'Signal transduction by L1', 'p.description': 'Signal transduction by L1'}, {'p.name': 'Constitutive Signaling by EGFRvIII', 'p.description': 'Constitutive Signaling by EGFRvIII'}, {'p.name': 'Inhibition of Signaling by Overexpressed EGFR', 'p.description': 'Inhibition of Signaling by Overexpressed EGFR'}, {'p.name': 'RAF/MAP kinase cascade', 'p.description': 'RAF/MAP kinase cascade'}, {'p.name': 'ERBB2 Regulates Cell Motility', 'p.description': 'ERBB2 Regulates Cell Motility'}, {'p.name': 'PI5P, PP2A and IER3 Regulate PI3K/AKT Signaling', 'p.description': 'PI5P, PP2A and IER3 Regulate PI3K/AKT Signaling'}, {'p.name': 'ERBB2 Activates PTK6 Signaling', 'p.description': 'ERBB2 Activates PTK6 Signaling'}, {'p.name': 'Cargo recognition for clathrin-mediated endocytosis', 'p.description': 'Cargo recognition for clathrin-mediated endocytosis'}, {'p.name': 'Clathrin-mediated endocytosis', 'p.description': 'Clathrin-mediated endocytosis'}, {'p.name': 'PTK6 promotes HIF1A stabilization', 'p.description': 'PTK6 promotes HIF1A stabilization'}, {'p.name': 'Downregulation of ERBB2 signaling', 'p.description': 'Downregulation of ERBB2 signaling'}, {'p.name': 'TFAP2 (AP-2) family regulates transcription of growth factors and their receptors', 'p.description': 'TFAP2 (AP-2) family regulates transcription of growth factors and their receptors'}, {'p.name': 'Extra-nuclear estrogen signaling', 'p.description': 'Extra-nuclear estrogen signaling'}, {'p.name': 'NOTCH3 Activation and Transmission of Signal to the Nucleus', 'p.description': 'NOTCH3 Activation and Transmission of Signal to the Nucleus'}, {'p.name': 'HCMV Early Events', 'p.description': 'HCMV Early Events'}, {'p.name': 'Estrogen-dependent nuclear events downstream of ESR-membrane signaling', 'p.description': 'Estrogen-dependent nuclear events downstream of ESR-membrane signaling'}, {'p.name': 'Signaling by ERBB2 KD Mutants', 'p.description': 'Signaling by ERBB2 KD Mutants'}, {'p.name': 'Signaling by ERBB2 ECD mutants', 'p.description': 'Signaling by ERBB2 ECD mutants'}, {'p.name': 'Signaling by ERBB2 TMD/JMD mutants', 'p.description': 'Signaling by ERBB2 TMD/JMD mutants'}]
My___res: [{'pathway.name': 'Signaling by ERBB2 TMD/JMD mutants', 'pathway.description': 'Signaling by ERBB2 TMD/JMD mutants'}, {'pathway.name': 'Signaling by ERBB2 ECD mutants', 'pathway.description': 'Signaling by ERBB2 ECD mutants'}, {'pathway.name': 'Signaling by ERBB2 KD Mutants', 'pathway.description': 'Signaling by ERBB2 KD Mutants'}, {'pathway.name': 'Estrogen-dependent nuclear events downstream of ESR-membrane signaling', 'pathway.description': 'Estrogen-dependent nuclear events downstream of ESR-membrane signaling'}, {'pathway.name': 'HCMV Early Events', 'pathway.description': 'HCMV Early Events'}, {'pathway.name': 'NOTCH3 Activation and Transmission of Signal to the Nucleus', 'pathway.description': 'NOTCH3 Activation and Transmission of Signal to the Nucleus'}, {'pathway.name': 'Extra-nuclear estrogen signaling', 'pathway.description': 'Extra-nuclear estrogen signaling'}, {'pathway.name': 'TFAP2 (AP-2) family regulates transcription of growth factors and their receptors', 'pathway.description': 'TFAP2 (AP-2) family regulates transcription of growth factors and their receptors'}, {'pathway.name': 'Downregulation of ERBB2 signaling', 'pathway.description': 'Downregulation of ERBB2 signaling'}, {'pathway.name': 'PTK6 promotes HIF1A stabilization', 'pathway.description': 'PTK6 promotes HIF1A stabilization'}, {'pathway.name': 'Clathrin-mediated endocytosis', 'pathway.description': 'Clathrin-mediated endocytosis'}, {'pathway.name': 'Cargo recognition for clathrin-mediated endocytosis', 'pathway.description': 'Cargo recognition for clathrin-mediated endocytosis'}, {'pathway.name': 'ERBB2 Activates PTK6 Signaling', 'pathway.description': 'ERBB2 Activates PTK6 Signaling'}, {'pathway.name': 'PI5P, PP2A and IER3 Regulate PI3K/AKT Signaling', 'pathway.description': 'PI5P, PP2A and IER3 Regulate PI3K/AKT Signaling'}, {'pathway.name': 'ERBB2 Regulates Cell Motility', 'pathway.description': 'ERBB2 Regulates Cell Motility'}, {'pathway.name': 'RAF/MAP kinase cascade', 'pathway.description': 'RAF/MAP kinase cascade'}, {'pathway.name': 'Inhibition of Signaling by Overexpressed EGFR', 'pathway.description': 'Inhibition of Signaling by Overexpressed EGFR'}, {'pathway.name': 'Constitutive Signaling by EGFRvIII', 'pathway.description': 'Constitutive Signaling by EGFRvIII'}, {'pathway.name': 'Signal transduction by L1', 'pathway.description': 'Signal transduction by L1'}, {'pathway.name': 'Constitutive Signaling by Aberrant PI3K in Cancer', 'pathway.description': 'Constitutive Signaling by Aberrant PI3K in Cancer'}, {'pathway.name': 'EGFR Transactivation by Gastrin', 'pathway.description': 'EGFR Transactivation by Gastrin'}, {'pathway.name': 'EGFR interacts with phospholipase C-gamma', 'pathway.description': 'EGFR interacts with phospholipase C-gamma'}, {'pathway.name': 'PI3K events in ERBB2 signaling', 'pathway.description': 'PI3K events in ERBB2 signaling'}, {'pathway.name': 'GRB2 events in ERBB2 signaling', 'pathway.description': 'GRB2 events in ERBB2 signaling'}, {'pathway.name': 'EGFR downregulation', 'pathway.description': 'EGFR downregulation'}, {'pathway.name': 'SHC1 events in EGFR signaling', 'pathway.description': 'SHC1 events in EGFR signaling'}, {'pathway.name': 'GAB1 signalosome', 'pathway.description': 'GAB1 signalosome'}, {'pathway.name': 'GRB2 events in EGFR signaling', 'pathway.description': 'GRB2 events in EGFR signaling'}, {'pathway.name': 'Signaling by EGFR', 'pathway.description': 'Signaling by EGFR'}, {'pathway.name': 'PIP3 activates AKT signaling', 'pathway.description': 'PIP3 activates AKT signaling'}, {'pathway.name': 'PLCG1 events in ERBB2 signaling', 'pathway.description': 'PLCG1 events in ERBB2 signaling'}, {'pathway.name': 'SHC1 events in ERBB2 signaling', 'pathway.description': 'SHC1 events in ERBB2 signaling'}, {'pathway.name': 'Signaling by ERBB4', 'pathway.description': 'Signaling by ERBB4'}, {'pathway.name': 'Constitutive Signaling by Ligand-Responsive EGFR Cancer Variants', 'pathway.description': 'Constitutive Signaling by Ligand-Responsive EGFR Cancer Variants'}, {'pathway.name': 'Signaling by ERBB2', 'pathway.description': 'Signaling by ERBB2'}, {'pathway.name': 'CBL', 'pathway.description': 'Cbl proto-oncogene'}, {'pathway.name': 'ARHGEF7', 'pathway.description': 'Rho guanine nucleotide exchange factor 7'}, {'pathway.name': 'STAM', 'pathway.description': 'signal transducing adaptor molecule'}, {'pathway.name': 'UBB', 'pathway.description': 'ubiquitin B'}, {'pathway.name': 'BTC', 'pathway.description': 'betacellulin'}, {'pathway.name': 'EPS15L1', 'pathway.description': 'epidermal growth factor receptor pathway substrate 15 like 1'}, {'pathway.name': 'SH3GL3', 'pathway.description': 'SH3 domain containing GRB2 like 3, endophilin A3'}, {'pathway.name': 'SH3GL2', 'pathway.description': 'SH3 domain containing GRB2 like 2, endophilin A1'}, {'pathway.name': 'SH3GL1', 'pathway.description': 'SH3 domain containing GRB2 like 1, endophilin A2'}, {'pathway.name': 'TGFA', 'pathway.description': 'transforming growth factor alpha'}, {'pathway.name': 'RPS27A', 'pathway.description': 'ribosomal protein S27a'}, {'pathway.name': 'PTPRK', 'pathway.description': 'protein tyrosine phosphatase receptor type K'}, {'pathway.name': 'PTPN12', 'pathway.description': 'protein tyrosine phosphatase non-receptor type 12'}, {'pathway.name': 'PTPN3', 'pathway.description': 'protein tyrosine phosphatase non-receptor type 3'}, {'pathway.name': 'CDC42', 'pathway.description': 'cell division cycle 42'}, {'pathway.name': 'GRB2', 'pathway.description': 'growth factor receptor bound protein 2'}, {'pathway.name': 'SH3KBP1', 'pathway.description': 'SH3 domain containing kinase binding protein 1'}, {'pathway.name': 'EPN1', 'pathway.description': 'epsin 1'}, {'pathway.name': 'AREG', 'pathway.description': 'amphiregulin'}, {'pathway.name': 'EGFR', 'pathway.description': 'epidermal growth factor receptor'}, {'pathway.name': 'EGF', 'pathway.description': 'epidermal growth factor'}, {'pathway.name': 'HBEGF', 'pathway.description': 'heparin binding EGF like growth factor'}, {'pathway.name': 'EREG', 'pathway.description': 'epiregulin'}, {'pathway.name': 'EPS15', 'pathway.description': 'epidermal growth factor receptor pathway substrate 15'}, {'pathway.name': 'EPGN', 'pathway.description': 'epithelial mitogen'}, {'pathway.name': 'STAM2', 'pathway.description': 'signal transducing adaptor molecule 2'}, {'pathway.name': 'SPRY2', 'pathway.description': 'sprouty RTK signaling antagonist 2'}, {'pathway.name': 'SPRY1', 'pathway.description': 'sprouty RTK signaling antagonist 1'}, {'pathway.name': 'UBA52', 'pathway.description': 'ubiquitin A-52 residue ribosomal protein fusion product 1'}, {'pathway.name': 'ADAM12', 'pathway.description': 'ADAM metallopeptidase domain 12'}, {'pathway.name': 'ADAM17', 'pathway.description': 'ADAM metallopeptidase domain 17'}, {'pathway.name': 'BTC', 'pathway.description': 'betacellulin'}, {'pathway.name': 'TGFA', 'pathway.description': 'transforming growth factor alpha'}, {'pathway.name': 'SRC', 'pathway.description': 'SRC proto-oncogene, non-receptor tyrosine kinase'}, {'pathway.name': 'AREG', 'pathway.description': 'amphiregulin'}, {'pathway.name': 'LRIG1', 'pathway.description': 'leucine rich repeats and immunoglobulin like domains 1'}, {'pathway.name': 'EGFR', 'pathway.description': 'epidermal growth factor receptor'}, {'pathway.name': 'EGF', 'pathway.description': 'epidermal growth factor'}, {'pathway.name': 'HBEGF', 'pathway.description': 'heparin binding EGF like growth factor'}, {'pathway.name': 'EREG', 'pathway.description': 'epiregulin'}, {'pathway.name': 'AAMP', 'pathway.description': 'angio associated migratory cell protein'}, {'pathway.name': 'EPGN', 'pathway.description': 'epithelial mitogen'}, {'pathway.name': 'ADAM10', 'pathway.description': 'ADAM metallopeptidase domain 10'}, {'pathway.name': 'PRKCA', 'pathway.description': 'protein kinase C alpha'}, {'pathway.name': 'MMP3', 'pathway.description': 'matrix metallopeptidase 3'}, {'pathway.name': 'NRAS', 'pathway.description': 'NRAS proto-oncogene, GTPase'}, {'pathway.name': 'KRAS', 'pathway.description': 'KRAS proto-oncogene, GTPase'}, {'pathway.name': 'GRB2', 'pathway.description': 'growth factor receptor bound protein 2'}, {'pathway.name': 'HRAS', 'pathway.description': 'HRas proto-oncogene, GTPase'}, {'pathway.name': 'EGFR', 'pathway.description': 'epidermal growth factor receptor'}, {'pathway.name': 'HBEGF', 'pathway.description': 'heparin binding EGF like growth factor'}, {'pathway.name': 'SOS1', 'pathway.description': 'SOS Ras/Rac guanine nucleotide exchange factor 1'}, {'pathway.name': 'BTC', 'pathway.description': 'betacellulin'}, {'pathway.name': 'SHC1', 'pathway.description': 'SHC adaptor protein 1'}, {'pathway.name': 'TGFA', 'pathway.description': 'transforming growth factor alpha'}, {'pathway.name': 'NRAS', 'pathway.description': 'NRAS proto-oncogene, GTPase'}, {'pathway.name': 'KRAS', 'pathway.description': 'KRAS proto-oncogene, GTPase'}, {'pathway.name': 'GRB2', 'pathway.description': 'growth factor receptor bound protein 2'}, {'pathway.name': 'HRAS', 'pathway.description': 'HRas proto-oncogene, GTPase'}, {'pathway.name': 'AREG', 'pathway.description': 'amphiregulin'}, {'pathway.name': 'EGFR', 'pathway.description': 'epidermal growth factor receptor'}, {'pathway.name': 'EGF', 'pathway.description': 'epidermal growth factor'}, {'pathway.name': 'HBEGF', 'pathway.description': 'heparin binding EGF like growth factor'}, {'pathway.name': 'EREG', 'pathway.description': 'epiregulin'}, {'pathway.name': 'EPGN', 'pathway.description': 'epithelial mitogen'}]

2. Question: List the top 5 most frequently cited vocabulary terms that are cross-referenced with other ontologies.
Expected: MATCH (term:Vocabulary)-[:OntologyMapping]->(:Vocabulary) RETURN term.name, term.n_citation ORDER BY term.n_citation DESC LIMIT 5
Orig_ans: MATCH (v:Vocabulary)-[:OntologyMapping]->(o:Vocabulary) 
RETURN v.name, v.id, v.n_citation 
ORDER BY v.n_citation DESC 
LIMIT 5
My___ans: MATCH(v:Vocabulary)-[:OntologyMapping]->(:Vocabulary)RETURN v.name,v.id,v.n_citation ORDER BY v.n_citation DESC LIMIT 5
Expected: [{'term.name': 'Microcephaly albinism digital anomalies syndrome', 'term.n_citation': None}, {'term.name': 'Metaphyseal undermodeling, spondylar dysplasia, and overgrowth', 'term.n_citation': None}, {'term.name': 'Coronary-Subclavian Steal Syndrome', 'term.n_citation': None}, {'term.name': 'Spinal Muscular Atrophy with Microcephaly and Mental Subnormality', 'term.n_citation': None}, {'term.name': 'silenoside A', 'term.n_citation': None}]
Orig_res: [{'v.name': 'Microcephaly albinism digital anomalies syndrome', 'v.id': 'mesh:C537322', 'v.n_citation': None}, {'v.name': 'Metaphyseal undermodeling, spondylar dysplasia, and overgrowth', 'v.id': 'mesh:C537355', 'v.n_citation': None}, {'v.name': 'Coronary-Subclavian Steal Syndrome', 'v.id': 'efo:1001297', 'v.n_citation': None}, {'v.name': 'Spinal Muscular Atrophy with Microcephaly and Mental Subnormality', 'v.id': 'mesh:C564806', 'v.n_citation': None}, {'v.name': 'silenoside A', 'v.id': 'mesh:C120208', 'v.n_citation': None}]
My___res: [{'v.name': 'Microcephaly albinism digital anomalies syndrome', 'v.id': 'mesh:C537322', 'v.n_citation': None}, {'v.name': 'Metaphyseal undermodeling, spondylar dysplasia, and overgrowth', 'v.id': 'mesh:C537355', 'v.n_citation': None}, {'v.name': 'Coronary-Subclavian Steal Syndrome', 'v.id': 'efo:1001297', 'v.n_citation': None}, {'v.name': 'Spinal Muscular Atrophy with Microcephaly and Mental Subnormality', 'v.id': 'mesh:C564806', 'v.n_citation': None}, {'v.name': 'silenoside A', 'v.id': 'mesh:C120208', 'v.n_citation': None}]

3. Question: What are the top 5 articles mentioning the gene 'BRCA1' by citation count?
Expected: CALL db.index.fulltext.queryNodes("vocabulary_Names", "'BRCA1'") YIELD node AS gene MATCH (article:Article)-[:ContainTerm]->(gene) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 5
Orig_ans: MATCH (v:Vocabulary {name: 'BRCA1'})<-[:ContainTerm]-(a:Article) 
RETURN a.title, a.n_citation 
ORDER BY a.n_citation DESC 
LIMIT 5
My___ans: CALL db.index.fulltext.queryNodes("vocabulary_Names", "'BRCA1'") YIELD node AS brca1 MATCH (article:Article)-[:ContainTerm]->(brca1) RETURN article.title, article.n_citation ORDER BY article.n_citation DESC LIMIT 5
Expected: [{'article.title': 'Comprehensive molecular portraits of human breast tumours.', 'article.n_citation': 4794}, {'article.title': 'Integrated genomic analyses of ovarian carcinoma.', 'article.n_citation': 3047}, {'article.title': 'Integrated genomic analyses of ovarian carcinoma.', 'article.n_citation': 3047}, {'article.title': 'Gene expression profiling predicts clinical outcome of breast cancer.', 'article.n_citation': 2891}, {'article.title': 'Gene expression profiling predicts clinical outcome of breast cancer.', 'article.n_citation': 2891}]
Orig_res: [{'a.title': 'Integrated genomic analyses of ovarian carcinoma.', 'a.n_citation': 3047}, {'a.title': 'Gene expression profiling predicts clinical outcome of breast cancer.', 'a.n_citation': 2891}, {'a.title': 'Targeting the DNA repair defect in BRCA mutant cells as a therapeutic strategy.', 'a.n_citation': 2252}, {'a.title': 'Repeated observation of breast tumor subtypes in independent gene expression data sets.', 'a.n_citation': 1840}, {'a.title': 'A strong candidate for the breast and ovarian cancer susceptibility gene BRCA1.', 'a.n_citation': 1415}]
My___res: [{'article.title': 'Comprehensive molecular portraits of human breast tumours.', 'article.n_citation': 4794}, {'article.title': 'Integrated genomic analyses of ovarian carcinoma.', 'article.n_citation': 3047}, {'article.title': 'Integrated genomic analyses of ovarian carcinoma.', 'article.n_citation': 3047}, {'article.title': 'Gene expression profiling predicts clinical outcome of breast cancer.', 'article.n_citation': 2891}, {'article.title': 'Gene expression profiling predicts clinical outcome of breast cancer.', 'article.n_citation': 2891}]

4. Question: What is the article with the DOI 10.3233/JAD-161250?
Expected: MATCH (a:Article) WHERE a.doi = '10.3233/JAD-161250' RETURN a.title, a.authors, a.pubdate
Orig_ans: MATCH (a:Article) WHERE a.doi = '10.3233/JAD-161250' RETURN a.title, a.authors, a.pubdate
My___ans: MATCH(a:Article{doi:'10.3233/JAD-161250'})RETURN a.title,a.pubdate,a.authors,a.journal LIMIT 1
Expected: [{'a.title': 'Type 1 Diabetes Mellitus and Cognitive Impairments: A Systematic Review.', 'a.authors': ['Wei Li', 'Edgar Huang', 'Sujuan Gao'], 'a.pubdate': 2017}]
Orig_res: [{'a.title': 'Type 1 Diabetes Mellitus and Cognitive Impairments: A Systematic Review.', 'a.authors': ['Wei Li', 'Edgar Huang', 'Sujuan Gao'], 'a.pubdate': 2017}]
My___res: [{'a.title': 'Type 1 Diabetes Mellitus and Cognitive Impairments: A Systematic Review.', 'a.pubdate': 2017, 'a.authors': ['Wei Li', 'Edgar Huang', 'Sujuan Gao'], 'a.journal': "Journal of Alzheimer's disease : JAD"}]

5. Question: List all genetic variants associated with 'diabetes' and include their risk alleles.
Expected: CALL db.index.fulltext.queryNodes("vocabulary_Names", "'diabetes'") YIELD node AS disease MATCH (variant:Vocabulary)-[:VariantToDiseaseAssociation]->(disease) RETURN variant.id, variant.name, variant.`risk allele` LIMIT 100
Orig_ans: MATCH (v:Vocabulary)-[:VariantToDiseaseAssociation]->(d:Vocabulary) WHERE d.name CONTAINS 'diabetes' RETURN v.id, v.name, v.`risk allele`
My___ans: CALL db.index.fulltext.queryNodes("vocabulary_Names", "'diabetes'") YIELD node AS diabetes MATCH (variant:Vocabulary)-[r:VariantToDiseaseAssociation]->(diabetes) RETURN variant.name, variant.id, r.`risk allele` LIMIT 100
Expected: [{'variant.id': 'rs17401474', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs35016586', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs4747862', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs17494333', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs1018015', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs3098897', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs11781353', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs631290', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs6460547', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs2893552', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs12666678', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs2431080', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs11743474', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs555875634', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs13103455', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs73250983', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs148981288', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs9426948', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs73155085', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs1882758', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs2683043', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs55724440', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs375800732', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs13195460', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs9389642', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs6922162', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs6552940', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs62125344', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs2848859', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs729743', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs1057040', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs8061878', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs180986320', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs62473335', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs17691129', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs11685304', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs188585450', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs144648928', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs140272419', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs78330668', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs10437851', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs10497721', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs7690819', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs6978712', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs11864909', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs865162', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs1974990', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs77559408', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs13333226', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs10224002', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs7222331', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs1143914', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs768920', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs11622435', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs5744680', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs4704221', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs7703051', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs1869717', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs6533530', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs13114738', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs7632505', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs940274', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs222826', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs1728918', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs6759518', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs478442', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs562338', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs16867253', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs4803750', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs4420638', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs10401969', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs8082812', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs7190256', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs247617', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs9939609', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs261332', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs12369179', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs12579302', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs4506565', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs7081476', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs460976', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs649529', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs13427836', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs4833103', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs113296370', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs11124945', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs7499584', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs12917707', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs2866611', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs760762', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs1333049', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs2980853', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs7115242', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs964184', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs174547', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs1333048', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs3803802', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs4905014', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs12310617', 'variant.name': None, 'variant.`risk allele`': None}, {'variant.id': 'rs12420422', 'variant.name': None, 'variant.`risk allele`': None}]
Orig_res: [{'v.id': 'rs200950799', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs8026743', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1906436', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2047866', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs12922822', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2079742', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs8096658', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs3765209', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10084572', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2023463', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2517601', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1264347', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2923008', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs497309', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2105903', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs56013828', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs62435145', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10224210', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1556751', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs963837', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2421556', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1047891', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs13146355', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs413988', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10941191', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2542713', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs3812035', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs35789010', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs13191445', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs61742093', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs3132374', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs74617384', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10811652', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs55703767', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs12615970', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs149641852', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs59825600', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs6688849', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs780093', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs6706313', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs17137004', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs74375025', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs4258701', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs149131600', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10220124', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7254268', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10057967', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs17140821', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2074755', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs799165', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs12420422', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs12310617', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs4905014', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs3803802', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1333048', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs174547', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs964184', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7115242', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2980853', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1333049', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs760762', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2866611', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs12917707', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7499584', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11124945', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs113296370', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs4833103', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs13427836', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs649529', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs460976', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7081476', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs4506565', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs12579302', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs12369179', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs261332', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs9939609', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs247617', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7190256', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs8082812', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10401969', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs4420638', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs4803750', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs16867253', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs562338', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs478442', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs6759518', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1728918', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs222826', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs940274', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7632505', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs13114738', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs6533530', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1869717', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7703051', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs4704221', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs5744680', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs71327027', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10022753', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs9368219', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2616194', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7894183', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2497304', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs28582793', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs150589038', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2238691', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs61277444', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7562121', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs6027504', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1989248', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs72809865', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10186458', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs317865', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs35612822', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs72831309', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs13217044', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11622435', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs768920', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1143914', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7222331', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10224002', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs13333226', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs77559408', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1974990', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs865162', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11864909', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs56094641', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs895157', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10144968', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7544082', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11101179', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs78954674', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs16977473', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs16940484', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs73048515', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs6978712', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7690819', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs741301', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10830962', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1470579', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7754840', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10497721', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7588550', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs12437854', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7583877', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs6027506', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11723864', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs878889', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs614226', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs13045180', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11698685', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs4871297', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1983890', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11755527', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11888640', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs9273368', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs689', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2476601', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs3184504', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10437851', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs78330668', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs140272419', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs144648928', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs188585450', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11685304', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs17691129', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs62473335', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs180986320', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs8061878', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1057040', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs729743', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2848859', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs62125344', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs6552940', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs6922162', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs9389642', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs13195460', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs375800732', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs55724440', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2683043', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1882758', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs73155085', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs9426948', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs148981288', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs73250983', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs13103455', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs555875634', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11743474', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2431080', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs12666678', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2893552', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs6460547', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs631290', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11781353', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs3098897', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1018015', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs17494333', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs4747862', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs35016586', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs17401474', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs9273364', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10965246', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1359790', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7018475', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11257655', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs12910361', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10184004', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs145510090', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs464605', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs8017808', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11070332', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7409148', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1112718', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2972155', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs112972879', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1974619', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs9957264', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs72802358', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2723063', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7903146', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs5213', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2268967', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs3383', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs61123794', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2293476', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs515071', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs9379084', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs3217792', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs28678152', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1056387', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs231361', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs719728', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs56094641', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs697238', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs10755148', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs9854769', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7766070', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1496653', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs116782923', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs77059113', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs3802177', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs9410573', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs4930011', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs1800961', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11720108', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs849140', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs780093', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs7501939', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs77464186', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs17036160', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11759026', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs79687284', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs4715207', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2258238', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs2476601', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs668799', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs76971802', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs11997465', 'v.name': None, 'v.`risk allele`': None}, {'v.id': 'rs75029938', 'v.name': None, 'v.`risk allele`': None}]
My___res: [{'variant.name': None, 'variant.id': 'rs17401474', 'r.`risk allele`': 'C'}, {'variant.name': None, 'variant.id': 'rs35016586', 'r.`risk allele`': 'T'}, {'variant.name': None, 'variant.id': 'rs4747862', 'r.`risk allele`': 'C'}, {'variant.name': None, 'variant.id': 'rs17494333', 'r.`risk allele`': 'G'}, {'variant.name': None, 'variant.id': 'rs1018015', 'r.`risk allele`': 'T'}, {'variant.name': None, 'variant.id': 'rs3098897', 'r.`risk allele`': 'C'}, {'variant.name': None, 'variant.id': 'rs11781353', 'r.`risk allele`': 'G'}, {'variant.name': None, 'variant.id': 'rs631290', 'r.`risk allele`': 'G'}, {'variant.name': None, 'variant.id': 'rs6460547', 'r.`risk allele`': 'C'}, {'variant.name': None, 'variant.id': 'rs2893552', 'r.`risk allele`': 'G'}, {'variant.name': None, 'variant.id': 'rs12666678', 'r.`risk allele`': 'C'}, {'variant.name': None, 'variant.id': 'rs2431080', 'r.`risk allele`': 'C'}, {'variant.name': None, 'variant.id': 'rs11743474', 'r.`risk allele`': 'C'}, {'variant.name': None, 'variant.id': 'rs555875634', 'r.`risk allele`': 'T'}, {'variant.name': None, 'variant.id': 'rs13103455', 'r.`risk allele`': 'C'}, {'variant.name': None, 'variant.id': 'rs73250983', 'r.`risk allele`': 'A'}, {'variant.name': None, 'variant.id': 'rs148981288', 'r.`risk allele`': 'A'}, {'variant.name': None, 'variant.id': 'rs9426948', 'r.`risk allele`': 'T'}, {'variant.name': None, 'variant.id': 'rs73155085', 'r.`risk allele`': 'A'}, {'variant.name': None, 'variant.id': 'rs1882758', 'r.`risk allele`': 'C'}, {'variant.name': None, 'variant.id': 'rs2683043', 'r.`risk allele`': 'G'}, {'variant.name': None, 'variant.id': 'rs55724440', 'r.`risk allele`': 'C'}, {'variant.name': None, 'variant.id': 'rs375800732', 'r.`risk allele`': 'C'}, {'variant.name': None, 'variant.id': 'rs13195460', 'r.`risk allele`': 'G'}, {'variant.name': None, 'variant.id': 'rs9389642', 'r.`risk allele`': 'T'}, {'variant.name': None, 'variant.id': 'rs6922162', 'r.`risk allele`': 'A'}, {'variant.name': None, 'variant.id': 'rs6552940', 'r.`risk allele`': 'G'}, {'variant.name': None, 'variant.id': 'rs62125344', 'r.`risk allele`': 'C'}, {'variant.name': None, 'variant.id': 'rs2848859', 'r.`risk allele`': 'C'}, {'variant.name': None, 'variant.id': 'rs729743', 'r.`risk allele`': 'A'}, {'variant.name': None, 'variant.id': 'rs1057040', 'r.`risk allele`': 'A'}, {'variant.name': None, 'variant.id': 'rs8061878', 'r.`risk allele`': 'G'}, {'variant.name': None, 'variant.id': 'rs180986320', 'r.`risk allele`': 'G'}, {'variant.name': None, 'variant.id': 'rs62473335', 'r.`risk allele`': 'C'}, {'variant.name': None, 'variant.id': 'rs17691129', 'r.`risk allele`': 'G'}, {'variant.name': None, 'variant.id': 'rs11685304', 'r.`risk allele`': 'T'}, {'variant.name': None, 'variant.id': 'rs188585450', 'r.`risk allele`': 'A'}, {'variant.name': None, 'variant.id': 'rs144648928', 'r.`risk allele`': 'A'}, {'variant.name': None, 'variant.id': 'rs140272419', 'r.`risk allele`': 'A'}, {'variant.name': None, 'variant.id': 'rs78330668', 'r.`risk allele`': 'A'}, {'variant.name': None, 'variant.id': 'rs10437851', 'r.`risk allele`': 'A'}, {'variant.name': None, 'variant.id': 'rs10497721', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs7690819', 'r.`risk allele`': 'G'}, {'variant.name': None, 'variant.id': 'rs6978712', 'r.`risk allele`': 'A'}, {'variant.name': None, 'variant.id': 'rs11864909', 'r.`risk allele`': 'T'}, {'variant.name': None, 'variant.id': 'rs865162', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs1974990', 'r.`risk allele`': 'G'}, {'variant.name': None, 'variant.id': 'rs77559408', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs13333226', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs10224002', 'r.`risk allele`': 'A'}, {'variant.name': None, 'variant.id': 'rs7222331', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs1143914', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs768920', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs11622435', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs5744680', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs4704221', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs7703051', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs1869717', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs6533530', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs13114738', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs7632505', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs940274', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs222826', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs1728918', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs6759518', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs478442', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs562338', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs16867253', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs4803750', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs4420638', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs10401969', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs8082812', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs7190256', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs247617', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs9939609', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs261332', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs12369179', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs12579302', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs4506565', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs7081476', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs460976', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs649529', 'r.`risk allele`': 'T'}, {'variant.name': None, 'variant.id': 'rs13427836', 'r.`risk allele`': 'T'}, {'variant.name': None, 'variant.id': 'rs4833103', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs113296370', 'r.`risk allele`': 'C'}, {'variant.name': None, 'variant.id': 'rs11124945', 'r.`risk allele`': 'G'}, {'variant.name': None, 'variant.id': 'rs7499584', 'r.`risk allele`': 'A'}, {'variant.name': None, 'variant.id': 'rs12917707', 'r.`risk allele`': 'T'}, {'variant.name': None, 'variant.id': 'rs2866611', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs760762', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs1333049', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs2980853', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs7115242', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs964184', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs174547', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs1333048', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs3803802', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs4905014', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs12310617', 'r.`risk allele`': '?'}, {'variant.name': None, 'variant.id': 'rs12420422', 'r.`risk allele`': '?'}]

6. Question: List all journals with the ISO abbreviation 'J Clin Invest'.
Expected: MATCH (j:Journal) WHERE j.iso_abbrevation = 'J Clin Invest' RETURN j.title, j.issn_print, j.issn_online
Orig_ans: MATCH (j:Journal) WHERE j.iso_abbrevation = 'J Clin Invest' RETURN j.title, j.id
My___ans: MATCH(j:Journal{iso_abbrevation:'J Clin Invest'})RETURN j.title LIMIT 100
Expected: [{'j.title': 'The Journal of clinical investigation', 'j.issn_print': '0021-9738', 'j.issn_online': '1558-8238'}]
Orig_res: [{'j.title': 'The Journal of clinical investigation', 'j.id': 'nlmid7802877'}]
My___res: [{'j.title': 'The Journal of clinical investigation'}]

7. Question: Which articles are most frequently cited and published in journals with online ISSN '1476-4687'?
Expected: MATCH (j:Journal {issn_online: '1476-4687'})<-[:PublishedIn]-(a:Article) RETURN a.title ORDER BY a.n_citation DESC LIMIT 5
Orig_ans: MATCH (a:Article)-[:PublishedIn]->(j:Journal) WHERE j.issn_online = '1476-4687' RETURN a.title, a.n_citation ORDER BY a.n_citation DESC LIMIT 10
My___ans: MATCH(j:Journal{issn_online:'1476-4687'})<-[:PublishedIn]-(a:Article)RETURN a.title,a.n_citation ORDER BY a.n_citation DESC LIMIT 100
Expected: [{'a.title': 'Cleavage of structural proteins during the assembly of the head of bacteriophage T4.'}, {'a.title': 'Initial sequencing and analysis of the human genome.'}, {'a.title': 'An integrated encyclopedia of DNA elements in the human genome.'}, {'a.title': 'A pneumonia outbreak associated with a new coronavirus of probable bat origin.'}, {'a.title': 'Molecular portraits of human breast tumours.'}]
Orig_res: [{'a.title': 'Cleavage of structural proteins during the assembly of the head of bacteriophage T4.', 'a.n_citation': 54937}, {'a.title': 'Initial sequencing and analysis of the human genome.', 'a.n_citation': 6948}, {'a.title': 'An integrated encyclopedia of DNA elements in the human genome.', 'a.n_citation': 6725}, {'a.title': 'A pneumonia outbreak associated with a new coronavirus of probable bat origin.', 'a.n_citation': 6085}, {'a.title': 'Molecular portraits of human breast tumours.', 'a.n_citation': 5148}, {'a.title': 'Inflammation and cancer.', 'a.n_citation': 4844}, {'a.title': 'Comprehensive molecular portraits of human breast tumours.', 'a.n_citation': 4794}, {'a.title': 'A global reference for human genetic variation.', 'a.n_citation': 4598}, {'a.title': 'The functions of animal microRNAs.', 'a.n_citation': 4488}, {'a.title': 'Deep learning.', 'a.n_citation': 4330}]
My___res: [{'a.title': 'Cleavage of structural proteins during the assembly of the head of bacteriophage T4.', 'a.n_citation': 54937}, {'a.title': 'Initial sequencing and analysis of the human genome.', 'a.n_citation': 6948}, {'a.title': 'An integrated encyclopedia of DNA elements in the human genome.', 'a.n_citation': 6725}, {'a.title': 'A pneumonia outbreak associated with a new coronavirus of probable bat origin.', 'a.n_citation': 6085}, {'a.title': 'Molecular portraits of human breast tumours.', 'a.n_citation': 5148}, {'a.title': 'Inflammation and cancer.', 'a.n_citation': 4844}, {'a.title': 'Comprehensive molecular portraits of human breast tumours.', 'a.n_citation': 4794}, {'a.title': 'A global reference for human genetic variation.', 'a.n_citation': 4598}, {'a.title': 'The functions of animal microRNAs.', 'a.n_citation': 4488}, {'a.title': 'Deep learning.', 'a.n_citation': 4330}, {'a.title': 'Analysis of protein-coding genetic variation in 60,706 humans.', 'a.n_citation': 4276}, {'a.title': 'Genome-wide association study of 14,000 cases of seven common diseases and 3,000 shared controls.', 'a.n_citation': 4124}, {'a.title': 'A map of human genome variation from population-scale sequencing.', 'a.n_citation': 3991}, {'a.title': 'An integrated map of genetic variation from 1,092 human genomes.', 'a.n_citation': 3943}, {'a.title': "Collective dynamics of 'small-world' networks.", 'a.n_citation': 3940}, {'a.title': 'Potent and specific genetic interference by double-stranded RNA in Caenorhabditis elegans.', 'a.n_citation': 3925}, {'a.title': 'Cancer-related inflammation.', 'a.n_citation': 3851}, {'a.title': 'MicroRNA expression profiles classify human cancers.', 'a.n_citation': 3798}, {'a.title': 'An obesity-associated gut microbiome with increased capacity for energy harvest.', 'a.n_citation': 3782}, {'a.title': 'Dendritic cells and the control of immunity.', 'a.n_citation': 3634}, {'a.title': 'The plant immune system.', 'a.n_citation': 3627}, {'a.title': 'Structure, function and diversity of the healthy human microbiome.', 'a.n_citation': 3522}, {'a.title': 'Stem cells, cancer, and cancer stem cells.', 'a.n_citation': 3506}, {'a.title': 'A human gut microbial gene catalogue established by metagenomic sequencing.', 'a.n_citation': 3489}, {'a.title': 'Signatures of mutational processes in human cancer.', 'a.n_citation': 3487}, {'a.title': 'Finding the missing heritability of complex diseases.', 'a.n_citation': 3441}, {'a.title': 'Comprehensive genomic characterization defines human glioblastoma genes and core pathways.', 'a.n_citation': 3423}, {'a.title': 'Mutations of the BRAF gene in human cancer.', 'a.n_citation': 3420}, {'a.title': 'Comprehensive molecular characterization of human colon and rectal cancer.', 'a.n_citation': 3353}, {'a.title': 'Continuous cultures of fused cells secreting antibody of predefined specificity.', 'a.n_citation': 3093}, {'a.title': 'Crystal structure of the nucleosome core particle at 2.8 A resolution.', 'a.n_citation': 3066}, {'a.title': 'The Cancer Cell Line Encyclopedia enables predictive modelling of anticancer drug sensitivity.', 'a.n_citation': 3064}, {'a.title': 'Integrated genomic analyses of ovarian carcinoma.', 'a.n_citation': 3047}, {'a.title': 'Analysis of the genome sequence of the flowering plant Arabidopsis thaliana.', 'a.n_citation': 3037}, {'a.title': 'Genome sequencing in microfabricated high-density picolitre reactors.', 'a.n_citation': 2937}, {'a.title': 'The global distribution and burden of dengue.', 'a.n_citation': 2927}, {'a.title': 'Identification of human brain tumour initiating cells.', 'a.n_citation': 2925}, {'a.title': 'Gene expression profiling predicts clinical outcome of breast cancer.', 'a.n_citation': 2891}, {'a.title': 'A new coronavirus associated with human respiratory disease in China.', 'a.n_citation': 2891}, {'a.title': 'A core gut microbiome in obese and lean twins.', 'a.n_citation': 2886}, {'a.title': 'Inflammation and metabolic disorders.', 'a.n_citation': 2835}, {'a.title': 'A synaptic model of memory: long-term potentiation in the hippocampus.', 'a.n_citation': 2767}, {'a.title': 'Microbial ecology: human gut microbes associated with obesity.', 'a.n_citation': 2748}, {'a.title': 'Reciprocal developmental pathways for the generation of pathogenic effector TH17 and regulatory T cells.', 'a.n_citation': 2746}, {'a.title': 'The language of covalent histone modifications.', 'a.n_citation': 2737}, {'a.title': 'Positional cloning of the mouse obese gene and its human homologue.', 'a.n_citation': 2729}, {'a.title': 'Initial sequencing and comparative analysis of the mouse genome.', 'a.n_citation': 2718}, {'a.title': 'Diet rapidly and reproducibly alters the human gut microbiome.', 'a.n_citation': 2717}, {'a.title': 'Autophagy fights disease through cellular self-digestion.', 'a.n_citation': 2689}, {'a.title': 'Deciphering the biology of Mycobacterium tuberculosis from the complete genome sequence.', 'a.n_citation': 2661}, {'a.title': 'Circular RNAs are a large class of animal RNAs with regulatory potency.', 'a.n_citation': 2622}, {'a.title': 'Natural RNA circles function as efficient microRNA sponges.', 'a.n_citation': 2611}, {'a.title': 'Biological insights from 108 schizophrenia-associated genetic loci.', 'a.n_citation': 2583}, {'a.title': 'Duplexes of 21-nucleotide RNAs mediate RNA interference in cultured mammalian cells.', 'a.n_citation': 2579}, {'a.title': 'Functional rafts in cell membranes.', 'a.n_citation': 2540}, {'a.title': 'Glioma stem cells promote radioresistance by preferential activation of the DNA damage response.', 'a.n_citation': 2533}, {'a.title': 'The capsaicin receptor: a heat-activated ion channel in the pain pathway.', 'a.n_citation': 2527}, {'a.title': 'Human gut microbiome viewed across age and geography.', 'a.n_citation': 2523}, {'a.title': 'Identification and analysis of functional elements in 1% of the human genome by the ENCODE pilot project.', 'a.n_citation': 2501}, {'a.title': 'Long non-coding RNA HOTAIR reprograms chromatin state to promote cancer metastasis.', 'a.n_citation': 2490}, {'a.title': 'Alpha-synuclein in Lewy bodies.', 'a.n_citation': 2464}, {'a.title': 'Topological domains in mammalian genomes identified by analysis of chromatin interactions.', 'a.n_citation': 2454}, {'a.title': 'Angiotensin-converting enzyme 2 is a functional receptor for the SARS coronavirus.', 'a.n_citation': 2400}, {'a.title': 'Global quantification of mammalian gene expression control.', 'a.n_citation': 2394}, {'a.title': 'Sequence and organization of the human mitochondrial genome.', 'a.n_citation': 2371}, {'a.title': 'Biodiversity hotspots for conservation priorities.', 'a.n_citation': 2367}, {'a.title': 'Alternative isoform regulation in human tissue transcriptomes.', 'a.n_citation': 2355}, {'a.title': 'A haplotype map of the human genome.', 'a.n_citation': 2344}, {'a.title': 'Biochemistry and molecular cell biology of diabetic complications.', 'a.n_citation': 2341}, {'a.title': 'Integrative analysis of 111 reference human epigenomes.', 'a.n_citation': 2336}, {'a.title': 'Distinct types of diffuse large B-cell lymphoma identified by gene expression profiling.', 'a.n_citation': 2312}, {'a.title': 'The International HapMap Project.', 'a.n_citation': 2294}, {'a.title': 'Angiogenesis in cancer and other diseases.', 'a.n_citation': 2290}, {'a.title': 'Genome-wide atlas of gene expression in the adult mouse brain.', 'a.n_citation': 2276}, {'a.title': 'PD-1 blockade induces responses by inhibiting adaptive immune resistance.', 'a.n_citation': 2254}, {'a.title': 'Targeting the DNA repair defect in BRCA mutant cells as a therapeutic strategy.', 'a.n_citation': 2252}, {'a.title': 'A second generation human haplotype map of over 3.1 million SNPs.', 'a.n_citation': 2228}, {'a.title': 'Mutational heterogeneity in cancer and the search for new cancer-associated genes.', 'a.n_citation': 2222}, {'a.title': 'Landscape of transcription in human cells.', 'a.n_citation': 2220}, {'a.title': 'Identification of stem cells in small intestine and colon by marker gene Lgr5.', 'a.n_citation': 2215}, {'a.title': 'The genomic and transcriptomic architecture of 2,000 breast tumours reveals novel subgroups.', 'a.n_citation': 2212}, {'a.title': 'Surfing the p53 network.', 'a.n_citation': 2188}, {'a.title': 'Single Lgr5 stem cells build crypt-villus structures in vitro without a mesenchymal niche.', 'a.n_citation': 2179}, {'a.title': 'Oxidants, oxidative stress and the biology of ageing.', 'a.n_citation': 2157}, {'a.title': 'Ultrasensitive fluorescent proteins for imaging neuronal activity.', 'a.n_citation': 2156}, {'a.title': 'Enterotypes of the human gut microbiome.', 'a.n_citation': 2153}, {'a.title': 'Inflammation in atherosclerosis.', 'a.n_citation': 2147}, {'a.title': 'Microarray analysis shows that some microRNAs downregulate large numbers of target mRNAs.', 'a.n_citation': 2125}, {'a.title': 'Genome-wide maps of chromatin state in pluripotent and lineage-committed cells.', 'a.n_citation': 2095}, {'a.title': 'Establishment in culture of pluripotential cells from mouse embryos.', 'a.n_citation': 2092}, {'a.title': 'The DNA-damage response in human biology and disease.', 'a.n_citation': 2060}, {'a.title': 'Antimicrobial peptides of multicellular organisms.', 'a.n_citation': 2059}, {'a.title': 'Virological assessment of hospitalized patients with COVID-2019.', 'a.n_citation': 2044}, {'a.title': 'The obligatory role of endothelial cells in the relaxation of arterial smooth muscle by acetylcholine.', 'a.n_citation': 2031}, {'a.title': 'Chromatin signature reveals over a thousand highly conserved large non-coding RNAs in mammals.', 'a.n_citation': 2027}, {'a.title': 'In vitro selection of RNA molecules that bind specific ligands.', 'a.n_citation': 2006}, {'a.title': 'Common polygenic variation contributes to risk of schizophrenia and bipolar disorder.', 'a.n_citation': 1998}, {'a.title': 'Mitochondrial dysfunction and oxidative stress in neurodegenerative diseases.', 'a.n_citation': 1998}, {'a.title': 'Two subsets of memory T lymphocytes with distinct homing potentials and effector functions.', 'a.n_citation': 1993}, {'a.title': 'The nuclear RNase III Drosha initiates microRNA processing.', 'a.n_citation': 1962}]

8. Question: What are the most cited diseases associated with chemical exposure to 'benzene'?
Expected: CALL db.index.fulltext.queryNodes("vocabulary_Names", "'benzene'") YIELD node AS chemical MATCH (chemical)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(disease:Vocabulary) RETURN disease.name, disease.id, disease.n_citation ORDER BY disease.n_citation DESC LIMIT 1
Orig_ans: MATCH (v:Vocabulary)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(d:Vocabulary) WHERE v.name = 'benzene' RETURN d.name, d.id, d.n_citation ORDER BY d.n_citation DESC LIMIT 10
My___ans: CALL db.index.fulltext.queryNodes("vocabulary_Names", "'benzene'") YIELD node AS benzene MATCH (benzene)-[:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation]->(disease:Vocabulary) RETURN disease.name, disease.id, disease.n_citation ORDER BY disease.n_citation DESC LIMIT 100
Expected: [{'disease.name': 'neoplasm', 'disease.id': 'mondo:0005070', 'disease.n_citation': 1068088}]
Orig_res: []
My___res: [{'disease.name': 'neoplasm', 'disease.id': 'mondo:0005070', 'disease.n_citation': 1068088}, {'disease.name': 'neoplasm', 'disease.id': 'mondo:0005070', 'disease.n_citation': 1068088}, {'disease.name': 'diabetes mellitus', 'disease.id': 'mondo:0005015', 'disease.n_citation': 427632}, {'disease.name': 'diabetes mellitus', 'disease.id': 'mondo:0005015', 'disease.n_citation': 427632}, {'disease.name': 'diabetes mellitus', 'disease.id': 'mondo:0005015', 'disease.n_citation': 427632}, {'disease.name': 'diabetes mellitus', 'disease.id': 'mondo:0005015', 'disease.n_citation': 427632}, {'disease.name': 'diabetes mellitus', 'disease.id': 'mondo:0005015', 'disease.n_citation': 427632}, {'disease.name': 'diabetes mellitus', 'disease.id': 'mondo:0005015', 'disease.n_citation': 427632}, {'disease.name': 'diabetes mellitus', 'disease.id': 'mondo:0005015', 'disease.n_citation': 427632}, {'disease.name': 'diabetes mellitus', 'disease.id': 'mondo:0005015', 'disease.n_citation': 427632}, {'disease.name': 'diabetes mellitus', 'disease.id': 'mondo:0005015', 'disease.n_citation': 427632}, {'disease.name': 'diabetes mellitus', 'disease.id': 'mondo:0005015', 'disease.n_citation': 427632}, {'disease.name': 'diabetes mellitus', 'disease.id': 'mondo:0005015', 'disease.n_citation': 427632}, {'disease.name': 'diabetes mellitus', 'disease.id': 'mondo:0005015', 'disease.n_citation': 427632}, {'disease.name': 'hypertensive disorder', 'disease.id': 'mondo:0005044', 'disease.n_citation': 273252}, {'disease.name': 'hypertensive disorder', 'disease.id': 'mondo:0005044', 'disease.n_citation': 273252}, {'disease.name': 'hypertensive disorder', 'disease.id': 'mondo:0005044', 'disease.n_citation': 273252}, {'disease.name': 'hypertensive disorder', 'disease.id': 'mondo:0005044', 'disease.n_citation': 273252}, {'disease.name': 'hypertensive disorder', 'disease.id': 'mondo:0005044', 'disease.n_citation': 273252}, {'disease.name': 'hypertensive disorder', 'disease.id': 'mondo:0005044', 'disease.n_citation': 273252}, {'disease.name': 'hypertensive disorder', 'disease.id': 'mondo:0005044', 'disease.n_citation': 273252}, {'disease.name': 'hypertensive disorder', 'disease.id': 'mondo:0005044', 'disease.n_citation': 273252}, {'disease.name': 'hypertension', 'disease.id': 'doid:10763', 'disease.n_citation': 264466}, {'disease.name': 'hypertension', 'disease.id': 'doid:10763', 'disease.n_citation': 264466}, {'disease.name': 'hypertension', 'disease.id': 'doid:10763', 'disease.n_citation': 264466}, {'disease.name': 'hypertension', 'disease.id': 'doid:10763', 'disease.n_citation': 264466}, {'disease.name': 'hypertension', 'disease.id': 'doid:10763', 'disease.n_citation': 264466}, {'disease.name': 'hypertension', 'disease.id': 'doid:10763', 'disease.n_citation': 264466}, {'disease.name': 'hypertension', 'disease.id': 'doid:10763', 'disease.n_citation': 264466}, {'disease.name': 'hypertension', 'disease.id': 'doid:10763', 'disease.n_citation': 264466}, {'disease.name': 'obesity disorder', 'disease.id': 'mondo:0011122', 'disease.n_citation': 241822}, {'disease.name': 'obesity disorder', 'disease.id': 'mondo:0011122', 'disease.n_citation': 241822}, {'disease.name': 'obesity disorder', 'disease.id': 'mondo:0011122', 'disease.n_citation': 241822}, {'disease.name': 'obesity disorder', 'disease.id': 'mondo:0011122', 'disease.n_citation': 241822}, {'disease.name': 'coronary artery disorder', 'disease.id': 'mondo:0005010', 'disease.n_citation': 154073}, {'disease.name': 'coronary artery disorder', 'disease.id': 'mondo:0005010', 'disease.n_citation': 154073}, {'disease.name': 'coronary artery disorder', 'disease.id': 'mondo:0005010', 'disease.n_citation': 154073}, {'disease.name': 'coronary artery disorder', 'disease.id': 'mondo:0005010', 'disease.n_citation': 154073}, {'disease.name': 'coronary artery disorder', 'disease.id': 'mondo:0005010', 'disease.n_citation': 154073}, {'disease.name': 'type 2 diabetes mellitus', 'disease.id': 'mondo:0005148', 'disease.n_citation': 153171}, {'disease.name': 'type 2 diabetes mellitus', 'disease.id': 'mondo:0005148', 'disease.n_citation': 153171}, {'disease.name': 'type 2 diabetes mellitus', 'disease.id': 'mondo:0005148', 'disease.n_citation': 153171}, {'disease.name': 'type 2 diabetes mellitus', 'disease.id': 'mondo:0005148', 'disease.n_citation': 153171}, {'disease.name': 'type 2 diabetes mellitus', 'disease.id': 'mondo:0005148', 'disease.n_citation': 153171}, {'disease.name': 'type 2 diabetes mellitus', 'disease.id': 'mondo:0005148', 'disease.n_citation': 153171}, {'disease.name': 'type 2 diabetes mellitus', 'disease.id': 'mondo:0005148', 'disease.n_citation': 153171}, {'disease.name': 'myocardial infarction', 'disease.id': 'mondo:0005068', 'disease.n_citation': 146317}, {'disease.name': 'myocardial infarction', 'disease.id': 'mondo:0005068', 'disease.n_citation': 146317}, {'disease.name': 'myocardial infarction', 'disease.id': 'mondo:0005068', 'disease.n_citation': 146317}, {'disease.name': 'Anxiety', 'disease.id': 'hp:0000739', 'disease.n_citation': 139934}, {'disease.name': 'Anxiety', 'disease.id': 'hp:0000739', 'disease.n_citation': 139934}, {'disease.name': 'Anxiety', 'disease.id': 'hp:0000739', 'disease.n_citation': 139934}, {'disease.name': 'cardiovascular disorder', 'disease.id': 'mondo:0004995', 'disease.n_citation': 138629}, {'disease.name': 'myocardial infarction', 'disease.id': 'doid:5844', 'disease.n_citation': 138298}, {'disease.name': 'myocardial infarction', 'disease.id': 'doid:5844', 'disease.n_citation': 138298}, {'disease.name': 'myocardial infarction', 'disease.id': 'doid:5844', 'disease.n_citation': 138298}, {'disease.name': 'Seizure', 'disease.id': 'hp:0001250', 'disease.n_citation': 131657}, {'disease.name': 'Seizure', 'disease.id': 'hp:0001250', 'disease.n_citation': 131657}, {'disease.name': 'asthma', 'disease.id': 'mondo:0004979', 'disease.n_citation': 128049}, {'disease.name': 'asthma', 'disease.id': 'mondo:0004979', 'disease.n_citation': 128049}, {'disease.name': 'asthma', 'disease.id': 'mondo:0004979', 'disease.n_citation': 128049}, {'disease.name': 'asthma', 'disease.id': 'mondo:0004979', 'disease.n_citation': 128049}, {'disease.name': 'asthma', 'disease.id': 'mondo:0004979', 'disease.n_citation': 128049}, {'disease.name': 'asthma', 'disease.id': 'mondo:0004979', 'disease.n_citation': 128049}, {'disease.name': 'asthma', 'disease.id': 'mondo:0004979', 'disease.n_citation': 128049}, {'disease.name': 'hepatocellular carcinoma', 'disease.id': 'doid:684', 'disease.n_citation': 115754}, {'disease.name': 'prostate cancer', 'disease.id': 'mondo:0008315', 'disease.n_citation': 113806}, {'disease.name': 'Fever', 'disease.id': 'hp:0001945', 'disease.n_citation': 112856}, {'disease.name': 'Fever', 'disease.id': 'hp:0001945', 'disease.n_citation': 112856}, {'disease.name': 'atherosclerosis', 'disease.id': 'mondo:0005311', 'disease.n_citation': 105989}, {'disease.name': 'atherosclerosis', 'disease.id': 'mondo:0005311', 'disease.n_citation': 105989}, {'disease.name': 'Parkinson disease', 'disease.id': 'mondo:0005180', 'disease.n_citation': 97433}, {'disease.name': 'Parkinson disease', 'disease.id': 'mondo:0005180', 'disease.n_citation': 97433}, {'disease.name': 'epilepsy', 'disease.id': 'mondo:0005027', 'disease.n_citation': 91258}, {'disease.name': 'epilepsy', 'disease.id': 'mondo:0005027', 'disease.n_citation': 91258}, {'disease.name': 'epilepsy', 'disease.id': 'mondo:0005027', 'disease.n_citation': 91258}, {'disease.name': 'epilepsy', 'disease.id': 'mondo:0005027', 'disease.n_citation': 91258}, {'disease.name': 'epilepsy', 'disease.id': 'mondo:0005027', 'disease.n_citation': 91258}, {'disease.name': 'Headache', 'disease.id': 'hp:0002315', 'disease.n_citation': 76047}, {'disease.name': 'Headache', 'disease.id': 'hp:0002315', 'disease.n_citation': 76047}, {'disease.name': 'Headache', 'disease.id': 'hp:0002315', 'disease.n_citation': 76047}, {'disease.name': 'Headache', 'disease.id': 'hp:0002315', 'disease.n_citation': 76047}, {'disease.name': 'Headache', 'disease.id': 'hp:0002315', 'disease.n_citation': 76047}, {'disease.name': 'Headache', 'disease.id': 'hp:0002315', 'disease.n_citation': 76047}, {'disease.name': 'Headache', 'disease.id': 'hp:0002315', 'disease.n_citation': 76047}, {'disease.name': 'Headache', 'disease.id': 'hp:0002315', 'disease.n_citation': 76047}, {'disease.name': 'Headache', 'disease.id': 'hp:0002315', 'disease.n_citation': 76047}, {'disease.name': 'Headache', 'disease.id': 'hp:0002315', 'disease.n_citation': 76047}, {'disease.name': 'atrial fibrillation', 'disease.id': 'mondo:0004981', 'disease.n_citation': 74920}, {'disease.name': 'atrial fibrillation', 'disease.id': 'mondo:0004981', 'disease.n_citation': 74920}, {'disease.name': 'chronic obstructive pulmonary disease', 'disease.id': 'mondo:0005002', 'disease.n_citation': 74104}, {'disease.name': 'cirrhosis of liver', 'disease.id': 'mondo:0005155', 'disease.n_citation': 72707}, {'disease.name': 'Fatigue', 'disease.id': 'hp:0012378', 'disease.n_citation': 68548}, {'disease.name': 'Fatigue', 'disease.id': 'hp:0012378', 'disease.n_citation': 68548}, {'disease.name': 'Fatigue', 'disease.id': 'hp:0012378', 'disease.n_citation': 68548}, {'disease.name': 'Fatigue', 'disease.id': 'hp:0012378', 'disease.n_citation': 68548}, {'disease.name': 'Arrhythmia', 'disease.id': 'hp:0011675', 'disease.n_citation': 63142}, {'disease.name': 'Arrhythmia', 'disease.id': 'hp:0011675', 'disease.n_citation': 63142}, {'disease.name': 'Arrhythmia', 'disease.id': 'hp:0011675', 'disease.n_citation': 63142}, {'disease.name': 'Arrhythmia', 'disease.id': 'hp:0011675', 'disease.n_citation': 63142}]

9. Question: Find all diseases that are connected to the gene with HGNC ID 'HGNC:1097' and return the disease name and its citation count.
Expected: MATCH (gene:Vocabulary {id: 'hgnc:1097'})-[:GeneToDiseaseAssociation]->(disease:Vocabulary) RETURN disease.name, disease.n_citation LIMIT 100
Orig_ans: MATCH (v:Vocabulary {id: 'hgnc:1097'})-[:GeneToDiseaseAssociation]->(d:Vocabulary) RETURN d.name, d.n_citation
My___ans: MATCH(g:Vocabulary{id:'hgnc:1097'})-[:GeneToDiseaseAssociation]->(d:Vocabulary)RETURN d.name,d.n_citation LIMIT 100
Expected: [{'disease.name': 'Noonan syndrome-like disorder with loose anagen hair', 'disease.n_citation': 0}, {'disease.name': 'medullary thyroid gland carcinoma', 'disease.n_citation': 7567}, {'disease.name': 'low-grade astrocytoma', 'disease.n_citation': 875}, {'disease.name': 'hidradenoma', 'disease.n_citation': 208}, {'disease.name': 'Costello syndrome', 'disease.n_citation': 429}, {'disease.name': 'lung carcinoma', 'disease.n_citation': 116535}, {'disease.name': 'colon carcinoma', 'disease.n_citation': 53037}, {'disease.name': 'colonic neoplasm', 'disease.n_citation': 5283}, {'disease.name': 'liver cancer', 'disease.n_citation': 21784}, {'disease.name': 'theca steroid-producing cell malignant tumor of ovary, not further specified', 'disease.n_citation': 0}, {'disease.name': 'adenocarcinoma of liver and intrahepatic biliary tract', 'disease.n_citation': 0}, {'disease.name': 'melanocytic nevus', 'disease.n_citation': 2605}, {'disease.name': 'ovarian mucinous adenocarcinoma', 'disease.n_citation': 146}, {'disease.name': 'ependymoblastoma', 'disease.n_citation': 298}, {'disease.name': 'undifferentiated carcinoma of the corpus uteri', 'disease.n_citation': 4}, {'disease.name': 'Richter syndrome', 'disease.n_citation': 626}, {'disease.name': 'ovarian carcinosarcoma', 'disease.n_citation': 156}, {'disease.name': 'immature ovarian teratoma', 'disease.n_citation': 1068}, {'disease.name': 'childhood cerebral astrocytoma', 'disease.n_citation': 130}, {'disease.name': 'ovarian clear cell adenocarcinoma', 'disease.n_citation': 165}, {'disease.name': 'thyroid gland carcinoma', 'disease.n_citation': 80}, {'disease.name': 'breast cancer', 'disease.n_citation': 275845}, {'disease.name': 'glioma', 'disease.n_citation': 40996}, {'disease.name': 'undifferentiated carcinoma of liver and intrahepatic biliary tract', 'disease.n_citation': 0}, {'disease.name': 'Prader-Willi syndrome', 'disease.n_citation': 4318}, {'disease.name': 'skin tag', 'disease.n_citation': 805}, {'disease.name': 'malignant dysgerminomatous germ cell tumor of ovary', 'disease.n_citation': 2}, {'disease.name': 'borderline epithelial tumor of ovary', 'disease.n_citation': 16}, {'disease.name': 'mantle cell lymphoma', 'disease.n_citation': 4870}, {'disease.name': 'breast carcinoma', 'disease.n_citation': 284050}, {'disease.name': 'cardiofaciocutaneous syndrome', 'disease.n_citation': 317}, {'disease.name': 'oligoastrocytoma', 'disease.n_citation': 805}, {'disease.name': 'leukemia', 'disease.n_citation': 60753}, {'disease.name': 'Erdheim-Chester disease', 'disease.n_citation': 0}, {'disease.name': 'maligant granulosa cell tumor of ovary', 'disease.n_citation': 85}, {'disease.name': 'papillary adenocarcinoma', 'disease.n_citation': 750}, {'disease.name': 'familial nonmedullary thyroid carcinoma', 'disease.n_citation': 62}, {'disease.name': 'lung cancer', 'disease.n_citation': 140381}, {'disease.name': 'fibrolamellar hepatocellular carcinoma', 'disease.n_citation': 0}, {'disease.name': 'hepatocellular carcinoma', 'disease.n_citation': 115754}, {'disease.name': 'lung neoplasm', 'disease.n_citation': 0}, {'disease.name': 'differentiated thyroid carcinoma', 'disease.n_citation': 7563}, {'disease.name': 'anaplastic ependymoma', 'disease.n_citation': 576}, {'disease.name': 'familial pancreatic carcinoma', 'disease.n_citation': 372}, {'disease.name': 'lymphoma', 'disease.n_citation': 68518}, {'disease.name': 'craniopharyngioma', 'disease.n_citation': 4111}, {'disease.name': 'anaplastic oligodendroglioma', 'disease.n_citation': 833}, {'disease.name': 'yolk sac tumor', 'disease.n_citation': 1806}, {'disease.name': 'plasma cell myeloma', 'disease.n_citation': 49812}, {'disease.name': 'lung adenocarcinoma', 'disease.n_citation': 17805}, {'disease.name': 'ovarian adenocarcinoma', 'disease.n_citation': 1044}, {'disease.name': 'diffuse astrocytoma', 'disease.n_citation': 826}, {'disease.name': 'syringocystadenoma papilliferum', 'disease.n_citation': 0}, {'disease.name': 'testicular germ cell tumor', 'disease.n_citation': 7518}, {'disease.name': 'Langerhans cell histiocytosis', 'disease.n_citation': 0}, {'disease.name': 'ovarian gynandroblastoma', 'disease.n_citation': 71}, {'disease.name': 'diffuse gastric adenocarcinoma', 'disease.n_citation': 15}, {'disease.name': 'diabetes mellitus', 'disease.n_citation': 427632}, {'disease.name': 'hair nevus', 'disease.n_citation': 33}, {'disease.name': 'papillary renal cell carcinoma', 'disease.n_citation': 0}, {'disease.name': 'glioma susceptibility', 'disease.n_citation': 0}, {'disease.name': 'mixed glioma', 'disease.n_citation': 218}, {'disease.name': 'bronchogenic carcinoma', 'disease.n_citation': 7252}, {'disease.name': 'gonadoblastoma', 'disease.n_citation': 778}, {'disease.name': 'colorectal cancer', 'disease.n_citation': 137909}, {'disease.name': 'angiocentric glioma', 'disease.n_citation': 94}, {'disease.name': 'colorectal adenocarcinoma', 'disease.n_citation': 4381}, {'disease.name': 'familial ovarian cancer', 'disease.n_citation': 338}, {'disease.name': 'astrocytoma (excluding glioblastoma)', 'disease.n_citation': 7972}, {'disease.name': 'malignant glioma', 'disease.n_citation': 46916}, {'disease.name': 'primary cutaneous T-cell non-Hodgkin lymphoma', 'disease.n_citation': 4692}, {'disease.name': 'adamantinous craniopharyngioma', 'disease.n_citation': 204}, {'disease.name': 'bronchus cancer', 'disease.n_citation': 19}, {'disease.name': 'thyroid cancer', 'disease.n_citation': 17423}, {'disease.name': 'papillary craniopharyngioma', 'disease.n_citation': 86}, {'disease.name': 'gastric carcinoma', 'disease.n_citation': 77867}, {'disease.name': 'primary cutaneous T-cell lymphoma', 'disease.n_citation': 316}, {'disease.name': 'syringoma', 'disease.n_citation': 412}, {'disease.name': 'oligodendroglial tumor', 'disease.n_citation': 469}, {'disease.name': 'prostate adenocarcinoma', 'disease.n_citation': 4354}, {'disease.name': 'brain astrocytoma', 'disease.n_citation': 76}, {'disease.name': 'pituicytoma', 'disease.n_citation': 177}, {'disease.name': 'cholangiocarcinoma', 'disease.n_citation': 0}, {'disease.name': 'bile duct carcinoma', 'disease.n_citation': 1338}, {'disease.name': 'kidney neoplasm', 'disease.n_citation': 8830}, {'disease.name': 'non-small cell lung carcinoma', 'disease.n_citation': 65503}, {'disease.name': 'glioblastoma', 'disease.n_citation': 40312}, {'disease.name': 'skin papilloma', 'disease.n_citation': 471}, {'disease.name': 'malignant sex cord stromal tumor of ovary', 'disease.n_citation': 6}, {'disease.name': 'granulomatous slack skin disease', 'disease.n_citation': 89}, {'disease.name': 'LEOPARD Syndrome', 'disease.n_citation': 450}, {'disease.name': 'non-Hodgkin lymphoma', 'disease.n_citation': 10000}, {'disease.name': 'pleomorphic xanthoastrocytoma', 'disease.n_citation': 540}, {'disease.name': 'gastric cancer', 'disease.n_citation': 68343}, {'disease.name': 'familial prostate carcinoma', 'disease.n_citation': 447}, {'disease.name': 'malignant germ cell tumor of ovary', 'disease.n_citation': 258}, {'disease.name': 'Noonan syndrome', 'disease.n_citation': 1682}, {'disease.name': 'ameloblastoma', 'disease.n_citation': 3506}, {'disease.name': 'ovarian cancer', 'disease.n_citation': 48617}, {'disease.name': 'malignant non-dysgerminomatous germ cell tumor of ovary', 'disease.n_citation': 0}]
Orig_res: [{'d.name': 'Noonan syndrome-like disorder with loose anagen hair', 'd.n_citation': 0}, {'d.name': 'medullary thyroid gland carcinoma', 'd.n_citation': 7567}, {'d.name': 'low-grade astrocytoma', 'd.n_citation': 875}, {'d.name': 'hidradenoma', 'd.n_citation': 208}, {'d.name': 'Costello syndrome', 'd.n_citation': 429}, {'d.name': 'lung carcinoma', 'd.n_citation': 116535}, {'d.name': 'colon carcinoma', 'd.n_citation': 53037}, {'d.name': 'colonic neoplasm', 'd.n_citation': 5283}, {'d.name': 'liver cancer', 'd.n_citation': 21784}, {'d.name': 'theca steroid-producing cell malignant tumor of ovary, not further specified', 'd.n_citation': 0}, {'d.name': 'adenocarcinoma of liver and intrahepatic biliary tract', 'd.n_citation': 0}, {'d.name': 'melanocytic nevus', 'd.n_citation': 2605}, {'d.name': 'ovarian mucinous adenocarcinoma', 'd.n_citation': 146}, {'d.name': 'ependymoblastoma', 'd.n_citation': 298}, {'d.name': 'undifferentiated carcinoma of the corpus uteri', 'd.n_citation': 4}, {'d.name': 'Richter syndrome', 'd.n_citation': 626}, {'d.name': 'ovarian carcinosarcoma', 'd.n_citation': 156}, {'d.name': 'immature ovarian teratoma', 'd.n_citation': 1068}, {'d.name': 'childhood cerebral astrocytoma', 'd.n_citation': 130}, {'d.name': 'ovarian clear cell adenocarcinoma', 'd.n_citation': 165}, {'d.name': 'thyroid gland carcinoma', 'd.n_citation': 80}, {'d.name': 'breast cancer', 'd.n_citation': 275845}, {'d.name': 'glioma', 'd.n_citation': 40996}, {'d.name': 'undifferentiated carcinoma of liver and intrahepatic biliary tract', 'd.n_citation': 0}, {'d.name': 'Prader-Willi syndrome', 'd.n_citation': 4318}, {'d.name': 'skin tag', 'd.n_citation': 805}, {'d.name': 'malignant dysgerminomatous germ cell tumor of ovary', 'd.n_citation': 2}, {'d.name': 'borderline epithelial tumor of ovary', 'd.n_citation': 16}, {'d.name': 'mantle cell lymphoma', 'd.n_citation': 4870}, {'d.name': 'breast carcinoma', 'd.n_citation': 284050}, {'d.name': 'cardiofaciocutaneous syndrome', 'd.n_citation': 317}, {'d.name': 'oligoastrocytoma', 'd.n_citation': 805}, {'d.name': 'leukemia', 'd.n_citation': 60753}, {'d.name': 'Erdheim-Chester disease', 'd.n_citation': 0}, {'d.name': 'maligant granulosa cell tumor of ovary', 'd.n_citation': 85}, {'d.name': 'papillary adenocarcinoma', 'd.n_citation': 750}, {'d.name': 'familial nonmedullary thyroid carcinoma', 'd.n_citation': 62}, {'d.name': 'lung cancer', 'd.n_citation': 140381}, {'d.name': 'fibrolamellar hepatocellular carcinoma', 'd.n_citation': 0}, {'d.name': 'hepatocellular carcinoma', 'd.n_citation': 115754}, {'d.name': 'lung neoplasm', 'd.n_citation': 0}, {'d.name': 'differentiated thyroid carcinoma', 'd.n_citation': 7563}, {'d.name': 'anaplastic ependymoma', 'd.n_citation': 576}, {'d.name': 'familial pancreatic carcinoma', 'd.n_citation': 372}, {'d.name': 'lymphoma', 'd.n_citation': 68518}, {'d.name': 'craniopharyngioma', 'd.n_citation': 4111}, {'d.name': 'anaplastic oligodendroglioma', 'd.n_citation': 833}, {'d.name': 'yolk sac tumor', 'd.n_citation': 1806}, {'d.name': 'plasma cell myeloma', 'd.n_citation': 49812}, {'d.name': 'lung adenocarcinoma', 'd.n_citation': 17805}, {'d.name': 'ovarian adenocarcinoma', 'd.n_citation': 1044}, {'d.name': 'diffuse astrocytoma', 'd.n_citation': 826}, {'d.name': 'syringocystadenoma papilliferum', 'd.n_citation': 0}, {'d.name': 'testicular germ cell tumor', 'd.n_citation': 7518}, {'d.name': 'Langerhans cell histiocytosis', 'd.n_citation': 0}, {'d.name': 'ovarian gynandroblastoma', 'd.n_citation': 71}, {'d.name': 'diffuse gastric adenocarcinoma', 'd.n_citation': 15}, {'d.name': 'diabetes mellitus', 'd.n_citation': 427632}, {'d.name': 'hair nevus', 'd.n_citation': 33}, {'d.name': 'papillary renal cell carcinoma', 'd.n_citation': 0}, {'d.name': 'glioma susceptibility', 'd.n_citation': 0}, {'d.name': 'mixed glioma', 'd.n_citation': 218}, {'d.name': 'bronchogenic carcinoma', 'd.n_citation': 7252}, {'d.name': 'gonadoblastoma', 'd.n_citation': 778}, {'d.name': 'colorectal cancer', 'd.n_citation': 137909}, {'d.name': 'angiocentric glioma', 'd.n_citation': 94}, {'d.name': 'colorectal adenocarcinoma', 'd.n_citation': 4381}, {'d.name': 'familial ovarian cancer', 'd.n_citation': 338}, {'d.name': 'astrocytoma (excluding glioblastoma)', 'd.n_citation': 7972}, {'d.name': 'malignant glioma', 'd.n_citation': 46916}, {'d.name': 'primary cutaneous T-cell non-Hodgkin lymphoma', 'd.n_citation': 4692}, {'d.name': 'adamantinous craniopharyngioma', 'd.n_citation': 204}, {'d.name': 'bronchus cancer', 'd.n_citation': 19}, {'d.name': 'thyroid cancer', 'd.n_citation': 17423}, {'d.name': 'papillary craniopharyngioma', 'd.n_citation': 86}, {'d.name': 'gastric carcinoma', 'd.n_citation': 77867}, {'d.name': 'primary cutaneous T-cell lymphoma', 'd.n_citation': 316}, {'d.name': 'syringoma', 'd.n_citation': 412}, {'d.name': 'oligodendroglial tumor', 'd.n_citation': 469}, {'d.name': 'prostate adenocarcinoma', 'd.n_citation': 4354}, {'d.name': 'brain astrocytoma', 'd.n_citation': 76}, {'d.name': 'pituicytoma', 'd.n_citation': 177}, {'d.name': 'cholangiocarcinoma', 'd.n_citation': 0}, {'d.name': 'bile duct carcinoma', 'd.n_citation': 1338}, {'d.name': 'kidney neoplasm', 'd.n_citation': 8830}, {'d.name': 'non-small cell lung carcinoma', 'd.n_citation': 65503}, {'d.name': 'glioblastoma', 'd.n_citation': 40312}, {'d.name': 'skin papilloma', 'd.n_citation': 471}, {'d.name': 'malignant sex cord stromal tumor of ovary', 'd.n_citation': 6}, {'d.name': 'granulomatous slack skin disease', 'd.n_citation': 89}, {'d.name': 'LEOPARD Syndrome', 'd.n_citation': 450}, {'d.name': 'non-Hodgkin lymphoma', 'd.n_citation': 10000}, {'d.name': 'pleomorphic xanthoastrocytoma', 'd.n_citation': 540}, {'d.name': 'gastric cancer', 'd.n_citation': 68343}, {'d.name': 'familial prostate carcinoma', 'd.n_citation': 447}, {'d.name': 'malignant germ cell tumor of ovary', 'd.n_citation': 258}, {'d.name': 'Noonan syndrome', 'd.n_citation': 1682}, {'d.name': 'ameloblastoma', 'd.n_citation': 3506}, {'d.name': 'ovarian cancer', 'd.n_citation': 48617}, {'d.name': 'malignant non-dysgerminomatous germ cell tumor of ovary', 'd.n_citation': 0}, {'d.name': 'exocrine pancreatic carcinoma', 'd.n_citation': 45683}, {'d.name': 'protoplasmic astrocytoma', 'd.n_citation': 31}, {'d.name': 'childhood astrocytic tumor', 'd.n_citation': 928}, {'d.name': 'lymphoma, non-Hodgkin, familial', 'd.n_citation': 10000}, {'d.name': 'familial atypical multiple mole melanoma syndrome', 'd.n_citation': 109}, {'d.name': 'embryonal carcinoma', 'd.n_citation': 3147}, {'d.name': 'thyroid tumor', 'd.n_citation': 0}, {'d.name': 'cutaneous fibrous histiocytoma', 'd.n_citation': 0}, {'d.name': 'neuroepithelial neoplasm', 'd.n_citation': 345}, {'d.name': 'breast adenocarcinoma', 'd.n_citation': 4453}, {'d.name': 'hereditary breast ovarian cancer syndrome', 'd.n_citation': 1175}, {'d.name': 'hereditary breast carcinoma', 'd.n_citation': 2198}, {'d.name': 'gliosarcoma', 'd.n_citation': 860}, {'d.name': 'subependymal giant cell astrocytoma', 'd.n_citation': 549}, {'d.name': 'ovarian neoplasm', 'd.n_citation': 9096}, {'d.name': 'gastric linitis plastica', 'd.n_citation': 71}, {'d.name': 'astroblastoma', 'd.n_citation': 171}, {'d.name': 'colorectal neoplasm', 'd.n_citation': 6192}, {'d.name': 'thyroid gland undifferentiated (anaplastic) carcinoma', 'd.n_citation': 2326}, {'d.name': 'squamous cell carcinoma of colon', 'd.n_citation': 37}, {'d.name': 'fibrillary astrocytoma', 'd.n_citation': 175}, {'d.name': 'astrocytic tumor', 'd.n_citation': 8784}, {'d.name': 'familial papillary or follicular thyroid carcinoma', 'd.n_citation': 108}, {'d.name': 'Sezary syndrome', 'd.n_citation': 0}, {'d.name': 'gastric neoplasm', 'd.n_citation': 3713}, {'d.name': 'follicular thyroid adenoma', 'd.n_citation': 2594}, {'d.name': 'lymphosarcoma', 'd.n_citation': 2391}, {'d.name': 'hairy cell leukemia', 'd.n_citation': 3587}, {'d.name': 'juvenile pilocytic astrocytoma', 'd.n_citation': 147}, {'d.name': 'melanoma', 'd.n_citation': 89594}, {'d.name': 'giant cell glioblastoma', 'd.n_citation': 126}, {'d.name': 'pilomyxoid astrocytoma', 'd.n_citation': 0}, {'d.name': 'kidney cancer', 'd.n_citation': 4842}, {'d.name': 'malignant colon neoplasm', 'd.n_citation': 43215}, {'d.name': 'childhood brain stem glioma', 'd.n_citation': 274}, {'d.name': 'pediatric hepatocellular carcinoma', 'd.n_citation': 0}, {'d.name': 'brain cancer', 'd.n_citation': 12069}, {'d.name': 'hereditary site-specific ovarian cancer syndrome', 'd.n_citation': 0}, {'d.name': 'familial papillary thyroid carcinoma with renal papillary neoplasia', 'd.n_citation': 0}, {'d.name': 'benign breast phyllodes tumor', 'd.n_citation': 0}, {'d.name': 'bile duct adenocarcinoma', 'd.n_citation': 33}, {'d.name': 'prostate cancer', 'd.n_citation': 113806}, {'d.name': 'nongerminomatous germ cell tumor', 'd.n_citation': 1279}, {'d.name': 'prostate carcinoma', 'd.n_citation': 115219}, {'d.name': 'chronic myelogenous leukemia, BCR-ABL1 positive', 'd.n_citation': 25775}, {'d.name': 'ovarian endometrioid adenocarcinoma', 'd.n_citation': 410}, {'d.name': 'chordoid glioma of the third ventricle', 'd.n_citation': 125}, {'d.name': 'ovarian small cell carcinoma', 'd.n_citation': 0}, {'d.name': 'colorectal carcinoma', 'd.n_citation': 114834}, {'d.name': 'hand-Schuller-Christian disease', 'd.n_citation': 120}, {'d.name': 'anaplastic oligoastrocytoma', 'd.n_citation': 254}, {'d.name': 'primary non-gestational choriocarcinoma of ovary', 'd.n_citation': 13}, {'d.name': 'squamous cell carcinoma of liver and intrahepatic biliary tract', 'd.n_citation': 0}, {'d.name': 'hairy cell leukemia variant', 'd.n_citation': 104}, {'d.name': 'malignant Sertoli-Leydig cell tumor of ovary', 'd.n_citation': 226}, {'d.name': 'embryonal carcinoma of the central nervous system', 'd.n_citation': 0}, {'d.name': 'type 2 diabetes mellitus', 'd.n_citation': 153171}, {'d.name': 'breast neoplasm', 'd.n_citation': 16614}, {'d.name': 'anaplastic astrocytoma', 'd.n_citation': 3456}, {'d.name': 'peripheral primitive neuroectodermal tumor', 'd.n_citation': 555}, {'d.name': 'gemistocytic astrocytoma', 'd.n_citation': 99}, {'d.name': 'B-cell neoplasm', 'd.n_citation': 7323}, {'d.name': 'Noonan syndrome with multiple lentigines', 'd.n_citation': 356}, {'d.name': 'adrenal cortex carcinoma', 'd.n_citation': 0}, {'d.name': 'squamous cell carcinoma of the corpus uteri', 'd.n_citation': 20}, {'d.name': 'stomach carcinoma in situ', 'd.n_citation': 6}, {'d.name': 'benign neoplasm of stomach', 'd.n_citation': 254}]
My___res: [{'d.name': 'Noonan syndrome-like disorder with loose anagen hair', 'd.n_citation': 0}, {'d.name': 'medullary thyroid gland carcinoma', 'd.n_citation': 7567}, {'d.name': 'low-grade astrocytoma', 'd.n_citation': 875}, {'d.name': 'hidradenoma', 'd.n_citation': 208}, {'d.name': 'Costello syndrome', 'd.n_citation': 429}, {'d.name': 'lung carcinoma', 'd.n_citation': 116535}, {'d.name': 'colon carcinoma', 'd.n_citation': 53037}, {'d.name': 'colonic neoplasm', 'd.n_citation': 5283}, {'d.name': 'liver cancer', 'd.n_citation': 21784}, {'d.name': 'theca steroid-producing cell malignant tumor of ovary, not further specified', 'd.n_citation': 0}, {'d.name': 'adenocarcinoma of liver and intrahepatic biliary tract', 'd.n_citation': 0}, {'d.name': 'melanocytic nevus', 'd.n_citation': 2605}, {'d.name': 'ovarian mucinous adenocarcinoma', 'd.n_citation': 146}, {'d.name': 'ependymoblastoma', 'd.n_citation': 298}, {'d.name': 'undifferentiated carcinoma of the corpus uteri', 'd.n_citation': 4}, {'d.name': 'Richter syndrome', 'd.n_citation': 626}, {'d.name': 'ovarian carcinosarcoma', 'd.n_citation': 156}, {'d.name': 'immature ovarian teratoma', 'd.n_citation': 1068}, {'d.name': 'childhood cerebral astrocytoma', 'd.n_citation': 130}, {'d.name': 'ovarian clear cell adenocarcinoma', 'd.n_citation': 165}, {'d.name': 'thyroid gland carcinoma', 'd.n_citation': 80}, {'d.name': 'breast cancer', 'd.n_citation': 275845}, {'d.name': 'glioma', 'd.n_citation': 40996}, {'d.name': 'undifferentiated carcinoma of liver and intrahepatic biliary tract', 'd.n_citation': 0}, {'d.name': 'Prader-Willi syndrome', 'd.n_citation': 4318}, {'d.name': 'skin tag', 'd.n_citation': 805}, {'d.name': 'malignant dysgerminomatous germ cell tumor of ovary', 'd.n_citation': 2}, {'d.name': 'borderline epithelial tumor of ovary', 'd.n_citation': 16}, {'d.name': 'mantle cell lymphoma', 'd.n_citation': 4870}, {'d.name': 'breast carcinoma', 'd.n_citation': 284050}, {'d.name': 'cardiofaciocutaneous syndrome', 'd.n_citation': 317}, {'d.name': 'oligoastrocytoma', 'd.n_citation': 805}, {'d.name': 'leukemia', 'd.n_citation': 60753}, {'d.name': 'Erdheim-Chester disease', 'd.n_citation': 0}, {'d.name': 'maligant granulosa cell tumor of ovary', 'd.n_citation': 85}, {'d.name': 'papillary adenocarcinoma', 'd.n_citation': 750}, {'d.name': 'familial nonmedullary thyroid carcinoma', 'd.n_citation': 62}, {'d.name': 'lung cancer', 'd.n_citation': 140381}, {'d.name': 'fibrolamellar hepatocellular carcinoma', 'd.n_citation': 0}, {'d.name': 'hepatocellular carcinoma', 'd.n_citation': 115754}, {'d.name': 'lung neoplasm', 'd.n_citation': 0}, {'d.name': 'differentiated thyroid carcinoma', 'd.n_citation': 7563}, {'d.name': 'anaplastic ependymoma', 'd.n_citation': 576}, {'d.name': 'familial pancreatic carcinoma', 'd.n_citation': 372}, {'d.name': 'lymphoma', 'd.n_citation': 68518}, {'d.name': 'craniopharyngioma', 'd.n_citation': 4111}, {'d.name': 'anaplastic oligodendroglioma', 'd.n_citation': 833}, {'d.name': 'yolk sac tumor', 'd.n_citation': 1806}, {'d.name': 'plasma cell myeloma', 'd.n_citation': 49812}, {'d.name': 'lung adenocarcinoma', 'd.n_citation': 17805}, {'d.name': 'ovarian adenocarcinoma', 'd.n_citation': 1044}, {'d.name': 'diffuse astrocytoma', 'd.n_citation': 826}, {'d.name': 'syringocystadenoma papilliferum', 'd.n_citation': 0}, {'d.name': 'testicular germ cell tumor', 'd.n_citation': 7518}, {'d.name': 'Langerhans cell histiocytosis', 'd.n_citation': 0}, {'d.name': 'ovarian gynandroblastoma', 'd.n_citation': 71}, {'d.name': 'diffuse gastric adenocarcinoma', 'd.n_citation': 15}, {'d.name': 'diabetes mellitus', 'd.n_citation': 427632}, {'d.name': 'hair nevus', 'd.n_citation': 33}, {'d.name': 'papillary renal cell carcinoma', 'd.n_citation': 0}, {'d.name': 'glioma susceptibility', 'd.n_citation': 0}, {'d.name': 'mixed glioma', 'd.n_citation': 218}, {'d.name': 'bronchogenic carcinoma', 'd.n_citation': 7252}, {'d.name': 'gonadoblastoma', 'd.n_citation': 778}, {'d.name': 'colorectal cancer', 'd.n_citation': 137909}, {'d.name': 'angiocentric glioma', 'd.n_citation': 94}, {'d.name': 'colorectal adenocarcinoma', 'd.n_citation': 4381}, {'d.name': 'familial ovarian cancer', 'd.n_citation': 338}, {'d.name': 'astrocytoma (excluding glioblastoma)', 'd.n_citation': 7972}, {'d.name': 'malignant glioma', 'd.n_citation': 46916}, {'d.name': 'primary cutaneous T-cell non-Hodgkin lymphoma', 'd.n_citation': 4692}, {'d.name': 'adamantinous craniopharyngioma', 'd.n_citation': 204}, {'d.name': 'bronchus cancer', 'd.n_citation': 19}, {'d.name': 'thyroid cancer', 'd.n_citation': 17423}, {'d.name': 'papillary craniopharyngioma', 'd.n_citation': 86}, {'d.name': 'gastric carcinoma', 'd.n_citation': 77867}, {'d.name': 'primary cutaneous T-cell lymphoma', 'd.n_citation': 316}, {'d.name': 'syringoma', 'd.n_citation': 412}, {'d.name': 'oligodendroglial tumor', 'd.n_citation': 469}, {'d.name': 'prostate adenocarcinoma', 'd.n_citation': 4354}, {'d.name': 'brain astrocytoma', 'd.n_citation': 76}, {'d.name': 'pituicytoma', 'd.n_citation': 177}, {'d.name': 'cholangiocarcinoma', 'd.n_citation': 0}, {'d.name': 'bile duct carcinoma', 'd.n_citation': 1338}, {'d.name': 'kidney neoplasm', 'd.n_citation': 8830}, {'d.name': 'non-small cell lung carcinoma', 'd.n_citation': 65503}, {'d.name': 'glioblastoma', 'd.n_citation': 40312}, {'d.name': 'skin papilloma', 'd.n_citation': 471}, {'d.name': 'malignant sex cord stromal tumor of ovary', 'd.n_citation': 6}, {'d.name': 'granulomatous slack skin disease', 'd.n_citation': 89}, {'d.name': 'LEOPARD Syndrome', 'd.n_citation': 450}, {'d.name': 'non-Hodgkin lymphoma', 'd.n_citation': 10000}, {'d.name': 'pleomorphic xanthoastrocytoma', 'd.n_citation': 540}, {'d.name': 'gastric cancer', 'd.n_citation': 68343}, {'d.name': 'familial prostate carcinoma', 'd.n_citation': 447}, {'d.name': 'malignant germ cell tumor of ovary', 'd.n_citation': 258}, {'d.name': 'Noonan syndrome', 'd.n_citation': 1682}, {'d.name': 'ameloblastoma', 'd.n_citation': 3506}, {'d.name': 'ovarian cancer', 'd.n_citation': 48617}, {'d.name': 'malignant non-dysgerminomatous germ cell tumor of ovary', 'd.n_citation': 0}]

10. Question: How many articles were published between 2018 and 2021?
Expected: MATCH (a:Article) WHERE a.pubdate >= 2018 AND a.pubdate <= 2021 RETURN COUNT(a)
Orig_ans: MATCH (a:Article) WHERE a.pubdate >= 2018 AND a.pubdate <= 2021 RETURN COUNT(a)
My___ans: MATCH(a:Article)WHERE a.pubdate>=2018 AND a.pubdate<=2021 RETURN COUNT(a)AS number_of_articles
Expected: [{'COUNT(a)': 5433316}]
Orig_res: [{'COUNT(a)': 5433316}]
My___res: [{'number_of_articles': 5433316}]

